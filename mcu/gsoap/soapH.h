/* soapH.h
   Generated by gSOAP 2.8.17r from mcu.interface.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_double(soap, data),0) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_mcu__listConferences
#define SOAP_TYPE_mcu__listConferences (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__listConferences(struct soap*, struct mcu__listConferences *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__listConferences(struct soap*, const struct mcu__listConferences *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__listConferences(struct soap*, const char*, int, const struct mcu__listConferences *, const char*);
SOAP_FMAC3 struct mcu__listConferences * SOAP_FMAC4 soap_in_mcu__listConferences(struct soap*, const char*, struct mcu__listConferences *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__listConferences(struct soap*, const struct mcu__listConferences *, const char*, const char*);

#ifndef soap_write_mcu__listConferences
#define soap_write_mcu__listConferences(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__listConferences(soap, data),0) || soap_put_mcu__listConferences(soap, data, "mcu:listConferences", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__listConferences * SOAP_FMAC4 soap_get_mcu__listConferences(struct soap*, struct mcu__listConferences *, const char*, const char*);

#ifndef soap_read_mcu__listConferences
#define soap_read_mcu__listConferences(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__listConferences(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__listConferences * SOAP_FMAC2 soap_instantiate_mcu__listConferences(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__listConferences * soap_new_mcu__listConferences(struct soap *soap, int n = -1) { return soap_instantiate_mcu__listConferences(soap, n, NULL, NULL, NULL); }

inline struct mcu__listConferences * soap_new_req_mcu__listConferences(struct soap *soap) { struct mcu__listConferences *_p = soap_instantiate_mcu__listConferences(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__listConferences(soap, _p); } return _p; }

inline struct mcu__listConferences * soap_new_set_mcu__listConferences(struct soap *soap, void *_param_9) { struct mcu__listConferences *_p = soap_instantiate_mcu__listConferences(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__listConferences(soap, _p); _p->_param_9 = _param_9; } return _p; }

inline void soap_delete_mcu__listConferences(struct soap *soap, struct mcu__listConferences *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__listConferences(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__listConferencesResponse
#define SOAP_TYPE_mcu__listConferencesResponse (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__listConferencesResponse(struct soap*, struct mcu__listConferencesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__listConferencesResponse(struct soap*, const struct mcu__listConferencesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__listConferencesResponse(struct soap*, const char*, int, const struct mcu__listConferencesResponse *, const char*);
SOAP_FMAC3 struct mcu__listConferencesResponse * SOAP_FMAC4 soap_in_mcu__listConferencesResponse(struct soap*, const char*, struct mcu__listConferencesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__listConferencesResponse(struct soap*, const struct mcu__listConferencesResponse *, const char*, const char*);

#ifndef soap_write_mcu__listConferencesResponse
#define soap_write_mcu__listConferencesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__listConferencesResponse(soap, data),0) || soap_put_mcu__listConferencesResponse(soap, data, "mcu:listConferencesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__listConferencesResponse * SOAP_FMAC4 soap_get_mcu__listConferencesResponse(struct soap*, struct mcu__listConferencesResponse *, const char*, const char*);

#ifndef soap_read_mcu__listConferencesResponse
#define soap_read_mcu__listConferencesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__listConferencesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__listConferencesResponse * SOAP_FMAC2 soap_instantiate_mcu__listConferencesResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__listConferencesResponse * soap_new_mcu__listConferencesResponse(struct soap *soap, int n = -1) { return soap_instantiate_mcu__listConferencesResponse(soap, n, NULL, NULL, NULL); }

inline struct mcu__listConferencesResponse * soap_new_req_mcu__listConferencesResponse(struct soap *soap, struct mcu__ConferenceArray& res) { struct mcu__listConferencesResponse *_p = soap_instantiate_mcu__listConferencesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__listConferencesResponse(soap, _p); _p->res = res; } return _p; }

inline struct mcu__listConferencesResponse * soap_new_set_mcu__listConferencesResponse(struct soap *soap, struct mcu__ConferenceArray& res) { struct mcu__listConferencesResponse *_p = soap_instantiate_mcu__listConferencesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__listConferencesResponse(soap, _p); _p->res = res; } return _p; }

inline void soap_delete_mcu__listConferencesResponse(struct soap *soap, struct mcu__listConferencesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__listConferencesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__delConference
#define SOAP_TYPE_mcu__delConference (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__delConference(struct soap*, struct mcu__delConference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__delConference(struct soap*, const struct mcu__delConference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__delConference(struct soap*, const char*, int, const struct mcu__delConference *, const char*);
SOAP_FMAC3 struct mcu__delConference * SOAP_FMAC4 soap_in_mcu__delConference(struct soap*, const char*, struct mcu__delConference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__delConference(struct soap*, const struct mcu__delConference *, const char*, const char*);

#ifndef soap_write_mcu__delConference
#define soap_write_mcu__delConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__delConference(soap, data),0) || soap_put_mcu__delConference(soap, data, "mcu:delConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__delConference * SOAP_FMAC4 soap_get_mcu__delConference(struct soap*, struct mcu__delConference *, const char*, const char*);

#ifndef soap_read_mcu__delConference
#define soap_read_mcu__delConference(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__delConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__delConference * SOAP_FMAC2 soap_instantiate_mcu__delConference(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__delConference * soap_new_mcu__delConference(struct soap *soap, int n = -1) { return soap_instantiate_mcu__delConference(soap, n, NULL, NULL, NULL); }

inline struct mcu__delConference * soap_new_req_mcu__delConference(struct soap *soap, int confid) { struct mcu__delConference *_p = soap_instantiate_mcu__delConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delConference(soap, _p); _p->confid = confid; } return _p; }

inline struct mcu__delConference * soap_new_set_mcu__delConference(struct soap *soap, int confid) { struct mcu__delConference *_p = soap_instantiate_mcu__delConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delConference(soap, _p); _p->confid = confid; } return _p; }

inline void soap_delete_mcu__delConference(struct soap *soap, struct mcu__delConference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__delConference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__addConference
#define SOAP_TYPE_mcu__addConference (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__addConference(struct soap*, struct mcu__addConference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__addConference(struct soap*, const struct mcu__addConference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__addConference(struct soap*, const char*, int, const struct mcu__addConference *, const char*);
SOAP_FMAC3 struct mcu__addConference * SOAP_FMAC4 soap_in_mcu__addConference(struct soap*, const char*, struct mcu__addConference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__addConference(struct soap*, const struct mcu__addConference *, const char*, const char*);

#ifndef soap_write_mcu__addConference
#define soap_write_mcu__addConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__addConference(soap, data),0) || soap_put_mcu__addConference(soap, data, "mcu:addConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__addConference * SOAP_FMAC4 soap_get_mcu__addConference(struct soap*, struct mcu__addConference *, const char*, const char*);

#ifndef soap_read_mcu__addConference
#define soap_read_mcu__addConference(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__addConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__addConference * SOAP_FMAC2 soap_instantiate_mcu__addConference(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__addConference * soap_new_mcu__addConference(struct soap *soap, int n = -1) { return soap_instantiate_mcu__addConference(soap, n, NULL, NULL, NULL); }

inline struct mcu__addConference * soap_new_req_mcu__addConference(struct soap *soap) { struct mcu__addConference *_p = soap_instantiate_mcu__addConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addConference(soap, _p); } return _p; }

inline struct mcu__addConference * soap_new_set_mcu__addConference(struct soap *soap, void *_param_7) { struct mcu__addConference *_p = soap_instantiate_mcu__addConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addConference(soap, _p); _p->_param_7 = _param_7; } return _p; }

inline void soap_delete_mcu__addConference(struct soap *soap, struct mcu__addConference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__addConference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__ConferenceArrayResponse
#define SOAP_TYPE_mcu__ConferenceArrayResponse (63)
#endif

#define soap_default_mcu__ConferenceArrayResponse(soap, a) soap_default_mcu__ConferenceArray(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__ConferenceArrayResponse(struct soap*, struct mcu__ConferenceArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__ConferenceArrayResponse(struct soap*, const char*, int, const struct mcu__ConferenceArray *, const char*);
SOAP_FMAC3 struct mcu__ConferenceArray * SOAP_FMAC4 soap_in_mcu__ConferenceArrayResponse(struct soap*, const char*, struct mcu__ConferenceArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__ConferenceArrayResponse(struct soap*, const struct mcu__ConferenceArray *, const char*, const char*);

#ifndef soap_write_mcu__ConferenceArrayResponse
#define soap_write_mcu__ConferenceArrayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__ConferenceArrayResponse(soap, data),0) || soap_put_mcu__ConferenceArrayResponse(soap, data, "mcu:ConferenceArrayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__ConferenceArray * SOAP_FMAC4 soap_get_mcu__ConferenceArrayResponse(struct soap*, struct mcu__ConferenceArray *, const char*, const char*);

#ifndef soap_read_mcu__ConferenceArrayResponse
#define soap_read_mcu__ConferenceArrayResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__ConferenceArrayResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__ConferenceArrayResponse soap_instantiate_mcu__ConferenceArray


#define soap_copy_mcu__ConferenceArrayResponse soap_copy_mcu__ConferenceArray

#ifndef SOAP_TYPE_mcu__ConferenceArray
#define SOAP_TYPE_mcu__ConferenceArray (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__ConferenceArray(struct soap*, struct mcu__ConferenceArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__ConferenceArray(struct soap*, struct mcu__ConferenceArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__ConferenceArray(struct soap*, const char*, int, const struct mcu__ConferenceArray *, const char*);
SOAP_FMAC3 struct mcu__ConferenceArray * SOAP_FMAC4 soap_in_mcu__ConferenceArray(struct soap*, const char*, struct mcu__ConferenceArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__ConferenceArray(struct soap*, const struct mcu__ConferenceArray *, const char*, const char*);

#ifndef soap_write_mcu__ConferenceArray
#define soap_write_mcu__ConferenceArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__ConferenceArray(soap, data),0) || soap_put_mcu__ConferenceArray(soap, data, "mcu:ConferenceArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__ConferenceArray * SOAP_FMAC4 soap_get_mcu__ConferenceArray(struct soap*, struct mcu__ConferenceArray *, const char*, const char*);

#ifndef soap_read_mcu__ConferenceArray
#define soap_read_mcu__ConferenceArray(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__ConferenceArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__ConferenceArray * SOAP_FMAC2 soap_instantiate_mcu__ConferenceArray(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__ConferenceArray * soap_new_mcu__ConferenceArray(struct soap *soap, int n = -1) { return soap_instantiate_mcu__ConferenceArray(soap, n, NULL, NULL, NULL); }

inline struct mcu__ConferenceArray * soap_new_req_mcu__ConferenceArray(struct soap *soap) { struct mcu__ConferenceArray *_p = soap_instantiate_mcu__ConferenceArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__ConferenceArray(soap, _p); } return _p; }

inline struct mcu__ConferenceArray * soap_new_set_mcu__ConferenceArray(struct soap *soap, struct mcu__Conference *__ptr, int __size) { struct mcu__ConferenceArray *_p = soap_instantiate_mcu__ConferenceArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__ConferenceArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_mcu__ConferenceArray(struct soap *soap, struct mcu__ConferenceArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__ConferenceArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__ConferenceResponse
#define SOAP_TYPE_mcu__ConferenceResponse (60)
#endif

#define soap_default_mcu__ConferenceResponse(soap, a) soap_default_mcu__Conference(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__ConferenceResponse(struct soap*, const struct mcu__Conference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__ConferenceResponse(struct soap*, const char*, int, const struct mcu__Conference *, const char*);
SOAP_FMAC3 struct mcu__Conference * SOAP_FMAC4 soap_in_mcu__ConferenceResponse(struct soap*, const char*, struct mcu__Conference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__ConferenceResponse(struct soap*, const struct mcu__Conference *, const char*, const char*);

#ifndef soap_write_mcu__ConferenceResponse
#define soap_write_mcu__ConferenceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__ConferenceResponse(soap, data),0) || soap_put_mcu__ConferenceResponse(soap, data, "mcu:ConferenceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Conference * SOAP_FMAC4 soap_get_mcu__ConferenceResponse(struct soap*, struct mcu__Conference *, const char*, const char*);

#ifndef soap_read_mcu__ConferenceResponse
#define soap_read_mcu__ConferenceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__ConferenceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__ConferenceResponse soap_instantiate_mcu__Conference


#define soap_copy_mcu__ConferenceResponse soap_copy_mcu__Conference

#ifndef SOAP_TYPE_mcu__Conference
#define SOAP_TYPE_mcu__Conference (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__Conference(struct soap*, struct mcu__Conference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__Conference(struct soap*, const struct mcu__Conference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__Conference(struct soap*, const char*, int, const struct mcu__Conference *, const char*);
SOAP_FMAC3 struct mcu__Conference * SOAP_FMAC4 soap_in_mcu__Conference(struct soap*, const char*, struct mcu__Conference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__Conference(struct soap*, const struct mcu__Conference *, const char*, const char*);

#ifndef soap_write_mcu__Conference
#define soap_write_mcu__Conference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__Conference(soap, data),0) || soap_put_mcu__Conference(soap, data, "mcu:Conference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Conference * SOAP_FMAC4 soap_get_mcu__Conference(struct soap*, struct mcu__Conference *, const char*, const char*);

#ifndef soap_read_mcu__Conference
#define soap_read_mcu__Conference(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__Conference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__Conference * SOAP_FMAC2 soap_instantiate_mcu__Conference(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__Conference * soap_new_mcu__Conference(struct soap *soap, int n = -1) { return soap_instantiate_mcu__Conference(soap, n, NULL, NULL, NULL); }

inline struct mcu__Conference * soap_new_req_mcu__Conference(struct soap *soap, int confid, struct mcu__MemberArray& members) { struct mcu__Conference *_p = soap_instantiate_mcu__Conference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Conference(soap, _p); _p->confid = confid; _p->members = members; } return _p; }

inline struct mcu__Conference * soap_new_set_mcu__Conference(struct soap *soap, int confid, char *desc, struct mcu__MemberArray& members) { struct mcu__Conference *_p = soap_instantiate_mcu__Conference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Conference(soap, _p); _p->confid = confid; _p->desc = desc; _p->members = members; } return _p; }

inline void soap_delete_mcu__Conference(struct soap *soap, struct mcu__Conference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__Conference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__enableSound
#define SOAP_TYPE_mcu__enableSound (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__enableSound(struct soap*, struct mcu__enableSound *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__enableSound(struct soap*, const struct mcu__enableSound *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__enableSound(struct soap*, const char*, int, const struct mcu__enableSound *, const char*);
SOAP_FMAC3 struct mcu__enableSound * SOAP_FMAC4 soap_in_mcu__enableSound(struct soap*, const char*, struct mcu__enableSound *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__enableSound(struct soap*, const struct mcu__enableSound *, const char*, const char*);

#ifndef soap_write_mcu__enableSound
#define soap_write_mcu__enableSound(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__enableSound(soap, data),0) || soap_put_mcu__enableSound(soap, data, "mcu:enableSound", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__enableSound * SOAP_FMAC4 soap_get_mcu__enableSound(struct soap*, struct mcu__enableSound *, const char*, const char*);

#ifndef soap_read_mcu__enableSound
#define soap_read_mcu__enableSound(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__enableSound(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__enableSound * SOAP_FMAC2 soap_instantiate_mcu__enableSound(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__enableSound * soap_new_mcu__enableSound(struct soap *soap, int n = -1) { return soap_instantiate_mcu__enableSound(soap, n, NULL, NULL, NULL); }

inline struct mcu__enableSound * soap_new_req_mcu__enableSound(struct soap *soap, int confid, int memberid, int enable) { struct mcu__enableSound *_p = soap_instantiate_mcu__enableSound(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__enableSound(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->enable = enable; } return _p; }

inline struct mcu__enableSound * soap_new_set_mcu__enableSound(struct soap *soap, int confid, int memberid, int enable) { struct mcu__enableSound *_p = soap_instantiate_mcu__enableSound(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__enableSound(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->enable = enable; } return _p; }

inline void soap_delete_mcu__enableSound(struct soap *soap, struct mcu__enableSound *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__enableSound(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__enableSoundResponse
#define SOAP_TYPE_mcu__enableSoundResponse (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__enableSoundResponse(struct soap*, struct mcu__enableSoundResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__enableSoundResponse(struct soap*, const struct mcu__enableSoundResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__enableSoundResponse(struct soap*, const char*, int, const struct mcu__enableSoundResponse *, const char*);
SOAP_FMAC3 struct mcu__enableSoundResponse * SOAP_FMAC4 soap_in_mcu__enableSoundResponse(struct soap*, const char*, struct mcu__enableSoundResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__enableSoundResponse(struct soap*, const struct mcu__enableSoundResponse *, const char*, const char*);

#ifndef soap_write_mcu__enableSoundResponse
#define soap_write_mcu__enableSoundResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__enableSoundResponse(soap, data),0) || soap_put_mcu__enableSoundResponse(soap, data, "mcu:enableSoundResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__enableSoundResponse * SOAP_FMAC4 soap_get_mcu__enableSoundResponse(struct soap*, struct mcu__enableSoundResponse *, const char*, const char*);

#ifndef soap_read_mcu__enableSoundResponse
#define soap_read_mcu__enableSoundResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__enableSoundResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__enableSoundResponse * SOAP_FMAC2 soap_instantiate_mcu__enableSoundResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__enableSoundResponse * soap_new_mcu__enableSoundResponse(struct soap *soap, int n = -1) { return soap_instantiate_mcu__enableSoundResponse(soap, n, NULL, NULL, NULL); }

inline struct mcu__enableSoundResponse * soap_new_req_mcu__enableSoundResponse(struct soap *soap, int res) { struct mcu__enableSoundResponse *_p = soap_instantiate_mcu__enableSoundResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__enableSoundResponse(soap, _p); _p->res = res; } return _p; }

inline struct mcu__enableSoundResponse * soap_new_set_mcu__enableSoundResponse(struct soap *soap, int res) { struct mcu__enableSoundResponse *_p = soap_instantiate_mcu__enableSoundResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__enableSoundResponse(soap, _p); _p->res = res; } return _p; }

inline void soap_delete_mcu__enableSoundResponse(struct soap *soap, struct mcu__enableSoundResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__enableSoundResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__delMember
#define SOAP_TYPE_mcu__delMember (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__delMember(struct soap*, struct mcu__delMember *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__delMember(struct soap*, const struct mcu__delMember *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__delMember(struct soap*, const char*, int, const struct mcu__delMember *, const char*);
SOAP_FMAC3 struct mcu__delMember * SOAP_FMAC4 soap_in_mcu__delMember(struct soap*, const char*, struct mcu__delMember *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__delMember(struct soap*, const struct mcu__delMember *, const char*, const char*);

#ifndef soap_write_mcu__delMember
#define soap_write_mcu__delMember(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__delMember(soap, data),0) || soap_put_mcu__delMember(soap, data, "mcu:delMember", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__delMember * SOAP_FMAC4 soap_get_mcu__delMember(struct soap*, struct mcu__delMember *, const char*, const char*);

#ifndef soap_read_mcu__delMember
#define soap_read_mcu__delMember(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__delMember(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__delMember * SOAP_FMAC2 soap_instantiate_mcu__delMember(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__delMember * soap_new_mcu__delMember(struct soap *soap, int n = -1) { return soap_instantiate_mcu__delMember(soap, n, NULL, NULL, NULL); }

inline struct mcu__delMember * soap_new_req_mcu__delMember(struct soap *soap, int confid, int memberid) { struct mcu__delMember *_p = soap_instantiate_mcu__delMember(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delMember(soap, _p); _p->confid = confid; _p->memberid = memberid; } return _p; }

inline struct mcu__delMember * soap_new_set_mcu__delMember(struct soap *soap, int confid, int memberid) { struct mcu__delMember *_p = soap_instantiate_mcu__delMember(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delMember(soap, _p); _p->confid = confid; _p->memberid = memberid; } return _p; }

inline void soap_delete_mcu__delMember(struct soap *soap, struct mcu__delMember *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__delMember(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__addMember
#define SOAP_TYPE_mcu__addMember (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__addMember(struct soap*, struct mcu__addMember *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__addMember(struct soap*, const struct mcu__addMember *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__addMember(struct soap*, const char*, int, const struct mcu__addMember *, const char*);
SOAP_FMAC3 struct mcu__addMember * SOAP_FMAC4 soap_in_mcu__addMember(struct soap*, const char*, struct mcu__addMember *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__addMember(struct soap*, const struct mcu__addMember *, const char*, const char*);

#ifndef soap_write_mcu__addMember
#define soap_write_mcu__addMember(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__addMember(soap, data),0) || soap_put_mcu__addMember(soap, data, "mcu:addMember", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__addMember * SOAP_FMAC4 soap_get_mcu__addMember(struct soap*, struct mcu__addMember *, const char*, const char*);

#ifndef soap_read_mcu__addMember
#define soap_read_mcu__addMember(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__addMember(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__addMember * SOAP_FMAC2 soap_instantiate_mcu__addMember(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__addMember * soap_new_mcu__addMember(struct soap *soap, int n = -1) { return soap_instantiate_mcu__addMember(soap, n, NULL, NULL, NULL); }

inline struct mcu__addMember * soap_new_req_mcu__addMember(struct soap *soap, int confid) { struct mcu__addMember *_p = soap_instantiate_mcu__addMember(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addMember(soap, _p); _p->confid = confid; } return _p; }

inline struct mcu__addMember * soap_new_set_mcu__addMember(struct soap *soap, int confid) { struct mcu__addMember *_p = soap_instantiate_mcu__addMember(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addMember(soap, _p); _p->confid = confid; } return _p; }

inline void soap_delete_mcu__addMember(struct soap *soap, struct mcu__addMember *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__addMember(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__MemberArray
#define SOAP_TYPE_mcu__MemberArray (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__MemberArray(struct soap*, struct mcu__MemberArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__MemberArray(struct soap*, struct mcu__MemberArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__MemberArray(struct soap*, const char*, int, const struct mcu__MemberArray *, const char*);
SOAP_FMAC3 struct mcu__MemberArray * SOAP_FMAC4 soap_in_mcu__MemberArray(struct soap*, const char*, struct mcu__MemberArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__MemberArray(struct soap*, const struct mcu__MemberArray *, const char*, const char*);

#ifndef soap_write_mcu__MemberArray
#define soap_write_mcu__MemberArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__MemberArray(soap, data),0) || soap_put_mcu__MemberArray(soap, data, "mcu:MemberArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__MemberArray * SOAP_FMAC4 soap_get_mcu__MemberArray(struct soap*, struct mcu__MemberArray *, const char*, const char*);

#ifndef soap_read_mcu__MemberArray
#define soap_read_mcu__MemberArray(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__MemberArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__MemberArray * SOAP_FMAC2 soap_instantiate_mcu__MemberArray(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__MemberArray * soap_new_mcu__MemberArray(struct soap *soap, int n = -1) { return soap_instantiate_mcu__MemberArray(soap, n, NULL, NULL, NULL); }

inline struct mcu__MemberArray * soap_new_req_mcu__MemberArray(struct soap *soap) { struct mcu__MemberArray *_p = soap_instantiate_mcu__MemberArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__MemberArray(soap, _p); } return _p; }

inline struct mcu__MemberArray * soap_new_set_mcu__MemberArray(struct soap *soap, struct mcu__Member *__ptr, int __size) { struct mcu__MemberArray *_p = soap_instantiate_mcu__MemberArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__MemberArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_mcu__MemberArray(struct soap *soap, struct mcu__MemberArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__MemberArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__MemberResponse
#define SOAP_TYPE_mcu__MemberResponse (47)
#endif

#define soap_default_mcu__MemberResponse(soap, a) soap_default_mcu__Member(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__MemberResponse(struct soap*, const struct mcu__Member *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__MemberResponse(struct soap*, const char*, int, const struct mcu__Member *, const char*);
SOAP_FMAC3 struct mcu__Member * SOAP_FMAC4 soap_in_mcu__MemberResponse(struct soap*, const char*, struct mcu__Member *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__MemberResponse(struct soap*, const struct mcu__Member *, const char*, const char*);

#ifndef soap_write_mcu__MemberResponse
#define soap_write_mcu__MemberResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__MemberResponse(soap, data),0) || soap_put_mcu__MemberResponse(soap, data, "mcu:MemberResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Member * SOAP_FMAC4 soap_get_mcu__MemberResponse(struct soap*, struct mcu__Member *, const char*, const char*);

#ifndef soap_read_mcu__MemberResponse
#define soap_read_mcu__MemberResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__MemberResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__MemberResponse soap_instantiate_mcu__Member


#define soap_copy_mcu__MemberResponse soap_copy_mcu__Member

#ifndef SOAP_TYPE_mcu__Member
#define SOAP_TYPE_mcu__Member (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__Member(struct soap*, struct mcu__Member *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__Member(struct soap*, const struct mcu__Member *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__Member(struct soap*, const char*, int, const struct mcu__Member *, const char*);
SOAP_FMAC3 struct mcu__Member * SOAP_FMAC4 soap_in_mcu__Member(struct soap*, const char*, struct mcu__Member *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__Member(struct soap*, const struct mcu__Member *, const char*, const char*);

#ifndef soap_write_mcu__Member
#define soap_write_mcu__Member(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__Member(soap, data),0) || soap_put_mcu__Member(soap, data, "mcu:Member", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Member * SOAP_FMAC4 soap_get_mcu__Member(struct soap*, struct mcu__Member *, const char*, const char*);

#ifndef soap_read_mcu__Member
#define soap_read_mcu__Member(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__Member(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__Member * SOAP_FMAC2 soap_instantiate_mcu__Member(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__Member * soap_new_mcu__Member(struct soap *soap, int n = -1) { return soap_instantiate_mcu__Member(soap, n, NULL, NULL, NULL); }

inline struct mcu__Member * soap_new_req_mcu__Member(struct soap *soap, int memberid, struct mcu__VideoSourceArray& sources, struct mcu__VideoSinkArray& sinks, struct mcu__AudioStream& audio, int enableaudio) { struct mcu__Member *_p = soap_instantiate_mcu__Member(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Member(soap, _p); _p->memberid = memberid; _p->sources = sources; _p->sinks = sinks; _p->audio = audio; _p->enableaudio = enableaudio; } return _p; }

inline struct mcu__Member * soap_new_set_mcu__Member(struct soap *soap, int memberid, char *name, struct mcu__VideoSourceArray& sources, struct mcu__VideoSinkArray& sinks, struct mcu__AudioStream& audio, int enableaudio) { struct mcu__Member *_p = soap_instantiate_mcu__Member(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Member(soap, _p); _p->memberid = memberid; _p->name = name; _p->sources = sources; _p->sinks = sinks; _p->audio = audio; _p->enableaudio = enableaudio; } return _p; }

inline void soap_delete_mcu__Member(struct soap *soap, struct mcu__Member *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__Member(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__delAudioStream
#define SOAP_TYPE_mcu__delAudioStream (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__delAudioStream(struct soap*, struct mcu__delAudioStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__delAudioStream(struct soap*, const struct mcu__delAudioStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__delAudioStream(struct soap*, const char*, int, const struct mcu__delAudioStream *, const char*);
SOAP_FMAC3 struct mcu__delAudioStream * SOAP_FMAC4 soap_in_mcu__delAudioStream(struct soap*, const char*, struct mcu__delAudioStream *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__delAudioStream(struct soap*, const struct mcu__delAudioStream *, const char*, const char*);

#ifndef soap_write_mcu__delAudioStream
#define soap_write_mcu__delAudioStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__delAudioStream(soap, data),0) || soap_put_mcu__delAudioStream(soap, data, "mcu:delAudioStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__delAudioStream * SOAP_FMAC4 soap_get_mcu__delAudioStream(struct soap*, struct mcu__delAudioStream *, const char*, const char*);

#ifndef soap_read_mcu__delAudioStream
#define soap_read_mcu__delAudioStream(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__delAudioStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__delAudioStream * SOAP_FMAC2 soap_instantiate_mcu__delAudioStream(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__delAudioStream * soap_new_mcu__delAudioStream(struct soap *soap, int n = -1) { return soap_instantiate_mcu__delAudioStream(soap, n, NULL, NULL, NULL); }

inline struct mcu__delAudioStream * soap_new_req_mcu__delAudioStream(struct soap *soap, int confid, int memberid, int streamid) { struct mcu__delAudioStream *_p = soap_instantiate_mcu__delAudioStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delAudioStream(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->streamid = streamid; } return _p; }

inline struct mcu__delAudioStream * soap_new_set_mcu__delAudioStream(struct soap *soap, int confid, int memberid, int streamid) { struct mcu__delAudioStream *_p = soap_instantiate_mcu__delAudioStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delAudioStream(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->streamid = streamid; } return _p; }

inline void soap_delete_mcu__delAudioStream(struct soap *soap, struct mcu__delAudioStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__delAudioStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__addAudioStream
#define SOAP_TYPE_mcu__addAudioStream (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__addAudioStream(struct soap*, struct mcu__addAudioStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__addAudioStream(struct soap*, const struct mcu__addAudioStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__addAudioStream(struct soap*, const char*, int, const struct mcu__addAudioStream *, const char*);
SOAP_FMAC3 struct mcu__addAudioStream * SOAP_FMAC4 soap_in_mcu__addAudioStream(struct soap*, const char*, struct mcu__addAudioStream *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__addAudioStream(struct soap*, const struct mcu__addAudioStream *, const char*, const char*);

#ifndef soap_write_mcu__addAudioStream
#define soap_write_mcu__addAudioStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__addAudioStream(soap, data),0) || soap_put_mcu__addAudioStream(soap, data, "mcu:addAudioStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__addAudioStream * SOAP_FMAC4 soap_get_mcu__addAudioStream(struct soap*, struct mcu__addAudioStream *, const char*, const char*);

#ifndef soap_read_mcu__addAudioStream
#define soap_read_mcu__addAudioStream(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__addAudioStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__addAudioStream * SOAP_FMAC2 soap_instantiate_mcu__addAudioStream(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__addAudioStream * soap_new_mcu__addAudioStream(struct soap *soap, int n = -1) { return soap_instantiate_mcu__addAudioStream(soap, n, NULL, NULL, NULL); }

inline struct mcu__addAudioStream * soap_new_req_mcu__addAudioStream(struct soap *soap, int confid, int memberid) { struct mcu__addAudioStream *_p = soap_instantiate_mcu__addAudioStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addAudioStream(soap, _p); _p->confid = confid; _p->memberid = memberid; } return _p; }

inline struct mcu__addAudioStream * soap_new_set_mcu__addAudioStream(struct soap *soap, int confid, int memberid) { struct mcu__addAudioStream *_p = soap_instantiate_mcu__addAudioStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addAudioStream(soap, _p); _p->confid = confid; _p->memberid = memberid; } return _p; }

inline void soap_delete_mcu__addAudioStream(struct soap *soap, struct mcu__addAudioStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__addAudioStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__AudioStreamResponse
#define SOAP_TYPE_mcu__AudioStreamResponse (40)
#endif

#define soap_default_mcu__AudioStreamResponse(soap, a) soap_default_mcu__AudioStream(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__AudioStreamResponse(struct soap*, const struct mcu__AudioStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__AudioStreamResponse(struct soap*, const char*, int, const struct mcu__AudioStream *, const char*);
SOAP_FMAC3 struct mcu__AudioStream * SOAP_FMAC4 soap_in_mcu__AudioStreamResponse(struct soap*, const char*, struct mcu__AudioStream *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__AudioStreamResponse(struct soap*, const struct mcu__AudioStream *, const char*, const char*);

#ifndef soap_write_mcu__AudioStreamResponse
#define soap_write_mcu__AudioStreamResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__AudioStreamResponse(soap, data),0) || soap_put_mcu__AudioStreamResponse(soap, data, "mcu:AudioStreamResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__AudioStream * SOAP_FMAC4 soap_get_mcu__AudioStreamResponse(struct soap*, struct mcu__AudioStream *, const char*, const char*);

#ifndef soap_read_mcu__AudioStreamResponse
#define soap_read_mcu__AudioStreamResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__AudioStreamResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__AudioStreamResponse soap_instantiate_mcu__AudioStream


#define soap_copy_mcu__AudioStreamResponse soap_copy_mcu__AudioStream

#ifndef SOAP_TYPE_mcu__AudioStream
#define SOAP_TYPE_mcu__AudioStream (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__AudioStream(struct soap*, struct mcu__AudioStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__AudioStream(struct soap*, const struct mcu__AudioStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__AudioStream(struct soap*, const char*, int, const struct mcu__AudioStream *, const char*);
SOAP_FMAC3 struct mcu__AudioStream * SOAP_FMAC4 soap_in_mcu__AudioStream(struct soap*, const char*, struct mcu__AudioStream *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__AudioStream(struct soap*, const struct mcu__AudioStream *, const char*, const char*);

#ifndef soap_write_mcu__AudioStream
#define soap_write_mcu__AudioStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__AudioStream(soap, data),0) || soap_put_mcu__AudioStream(soap, data, "mcu:AudioStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__AudioStream * SOAP_FMAC4 soap_get_mcu__AudioStream(struct soap*, struct mcu__AudioStream *, const char*, const char*);

#ifndef soap_read_mcu__AudioStream
#define soap_read_mcu__AudioStream(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__AudioStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__AudioStream * SOAP_FMAC2 soap_instantiate_mcu__AudioStream(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__AudioStream * soap_new_mcu__AudioStream(struct soap *soap, int n = -1) { return soap_instantiate_mcu__AudioStream(soap, n, NULL, NULL, NULL); }

inline struct mcu__AudioStream * soap_new_req_mcu__AudioStream(struct soap *soap, int streamid, struct mcu__MediaEndpoint& endpoint) { struct mcu__AudioStream *_p = soap_instantiate_mcu__AudioStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__AudioStream(soap, _p); _p->streamid = streamid; _p->endpoint = endpoint; } return _p; }

inline struct mcu__AudioStream * soap_new_set_mcu__AudioStream(struct soap *soap, int streamid, struct mcu__MediaEndpoint& endpoint) { struct mcu__AudioStream *_p = soap_instantiate_mcu__AudioStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__AudioStream(soap, _p); _p->streamid = streamid; _p->endpoint = endpoint; } return _p; }

inline void soap_delete_mcu__AudioStream(struct soap *soap, struct mcu__AudioStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__AudioStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__delVideoSink
#define SOAP_TYPE_mcu__delVideoSink (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__delVideoSink(struct soap*, struct mcu__delVideoSink *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__delVideoSink(struct soap*, const struct mcu__delVideoSink *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__delVideoSink(struct soap*, const char*, int, const struct mcu__delVideoSink *, const char*);
SOAP_FMAC3 struct mcu__delVideoSink * SOAP_FMAC4 soap_in_mcu__delVideoSink(struct soap*, const char*, struct mcu__delVideoSink *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__delVideoSink(struct soap*, const struct mcu__delVideoSink *, const char*, const char*);

#ifndef soap_write_mcu__delVideoSink
#define soap_write_mcu__delVideoSink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__delVideoSink(soap, data),0) || soap_put_mcu__delVideoSink(soap, data, "mcu:delVideoSink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__delVideoSink * SOAP_FMAC4 soap_get_mcu__delVideoSink(struct soap*, struct mcu__delVideoSink *, const char*, const char*);

#ifndef soap_read_mcu__delVideoSink
#define soap_read_mcu__delVideoSink(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__delVideoSink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__delVideoSink * SOAP_FMAC2 soap_instantiate_mcu__delVideoSink(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__delVideoSink * soap_new_mcu__delVideoSink(struct soap *soap, int n = -1) { return soap_instantiate_mcu__delVideoSink(soap, n, NULL, NULL, NULL); }

inline struct mcu__delVideoSink * soap_new_req_mcu__delVideoSink(struct soap *soap, int confid, int memberid, int sinkid) { struct mcu__delVideoSink *_p = soap_instantiate_mcu__delVideoSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delVideoSink(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->sinkid = sinkid; } return _p; }

inline struct mcu__delVideoSink * soap_new_set_mcu__delVideoSink(struct soap *soap, int confid, int memberid, int sinkid) { struct mcu__delVideoSink *_p = soap_instantiate_mcu__delVideoSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delVideoSink(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->sinkid = sinkid; } return _p; }

inline void soap_delete_mcu__delVideoSink(struct soap *soap, struct mcu__delVideoSink *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__delVideoSink(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__addVideoSink
#define SOAP_TYPE_mcu__addVideoSink (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__addVideoSink(struct soap*, struct mcu__addVideoSink *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__addVideoSink(struct soap*, const struct mcu__addVideoSink *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__addVideoSink(struct soap*, const char*, int, const struct mcu__addVideoSink *, const char*);
SOAP_FMAC3 struct mcu__addVideoSink * SOAP_FMAC4 soap_in_mcu__addVideoSink(struct soap*, const char*, struct mcu__addVideoSink *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__addVideoSink(struct soap*, const struct mcu__addVideoSink *, const char*, const char*);

#ifndef soap_write_mcu__addVideoSink
#define soap_write_mcu__addVideoSink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__addVideoSink(soap, data),0) || soap_put_mcu__addVideoSink(soap, data, "mcu:addVideoSink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__addVideoSink * SOAP_FMAC4 soap_get_mcu__addVideoSink(struct soap*, struct mcu__addVideoSink *, const char*, const char*);

#ifndef soap_read_mcu__addVideoSink
#define soap_read_mcu__addVideoSink(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__addVideoSink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__addVideoSink * SOAP_FMAC2 soap_instantiate_mcu__addVideoSink(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__addVideoSink * soap_new_mcu__addVideoSink(struct soap *soap, int n = -1) { return soap_instantiate_mcu__addVideoSink(soap, n, NULL, NULL, NULL); }

inline struct mcu__addVideoSink * soap_new_req_mcu__addVideoSink(struct soap *soap, int confid, int memberid, int sourceid) { struct mcu__addVideoSink *_p = soap_instantiate_mcu__addVideoSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addVideoSink(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->sourceid = sourceid; } return _p; }

inline struct mcu__addVideoSink * soap_new_set_mcu__addVideoSink(struct soap *soap, int confid, int memberid, int sourceid) { struct mcu__addVideoSink *_p = soap_instantiate_mcu__addVideoSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addVideoSink(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->sourceid = sourceid; } return _p; }

inline void soap_delete_mcu__addVideoSink(struct soap *soap, struct mcu__addVideoSink *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__addVideoSink(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__VideoSinkArray
#define SOAP_TYPE_mcu__VideoSinkArray (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__VideoSinkArray(struct soap*, struct mcu__VideoSinkArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VideoSinkArray(struct soap*, struct mcu__VideoSinkArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VideoSinkArray(struct soap*, const char*, int, const struct mcu__VideoSinkArray *, const char*);
SOAP_FMAC3 struct mcu__VideoSinkArray * SOAP_FMAC4 soap_in_mcu__VideoSinkArray(struct soap*, const char*, struct mcu__VideoSinkArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VideoSinkArray(struct soap*, const struct mcu__VideoSinkArray *, const char*, const char*);

#ifndef soap_write_mcu__VideoSinkArray
#define soap_write_mcu__VideoSinkArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VideoSinkArray(soap, data),0) || soap_put_mcu__VideoSinkArray(soap, data, "mcu:VideoSinkArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSinkArray * SOAP_FMAC4 soap_get_mcu__VideoSinkArray(struct soap*, struct mcu__VideoSinkArray *, const char*, const char*);

#ifndef soap_read_mcu__VideoSinkArray
#define soap_read_mcu__VideoSinkArray(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VideoSinkArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__VideoSinkArray * SOAP_FMAC2 soap_instantiate_mcu__VideoSinkArray(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__VideoSinkArray * soap_new_mcu__VideoSinkArray(struct soap *soap, int n = -1) { return soap_instantiate_mcu__VideoSinkArray(soap, n, NULL, NULL, NULL); }

inline struct mcu__VideoSinkArray * soap_new_req_mcu__VideoSinkArray(struct soap *soap) { struct mcu__VideoSinkArray *_p = soap_instantiate_mcu__VideoSinkArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSinkArray(soap, _p); } return _p; }

inline struct mcu__VideoSinkArray * soap_new_set_mcu__VideoSinkArray(struct soap *soap, struct mcu__VideoSink *__ptr, int __size) { struct mcu__VideoSinkArray *_p = soap_instantiate_mcu__VideoSinkArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSinkArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_mcu__VideoSinkArray(struct soap *soap, struct mcu__VideoSinkArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__VideoSinkArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__VideoSinkResponse
#define SOAP_TYPE_mcu__VideoSinkResponse (31)
#endif

#define soap_default_mcu__VideoSinkResponse(soap, a) soap_default_mcu__VideoSink(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VideoSinkResponse(struct soap*, const struct mcu__VideoSink *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VideoSinkResponse(struct soap*, const char*, int, const struct mcu__VideoSink *, const char*);
SOAP_FMAC3 struct mcu__VideoSink * SOAP_FMAC4 soap_in_mcu__VideoSinkResponse(struct soap*, const char*, struct mcu__VideoSink *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VideoSinkResponse(struct soap*, const struct mcu__VideoSink *, const char*, const char*);

#ifndef soap_write_mcu__VideoSinkResponse
#define soap_write_mcu__VideoSinkResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VideoSinkResponse(soap, data),0) || soap_put_mcu__VideoSinkResponse(soap, data, "mcu:VideoSinkResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSink * SOAP_FMAC4 soap_get_mcu__VideoSinkResponse(struct soap*, struct mcu__VideoSink *, const char*, const char*);

#ifndef soap_read_mcu__VideoSinkResponse
#define soap_read_mcu__VideoSinkResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VideoSinkResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__VideoSinkResponse soap_instantiate_mcu__VideoSink


#define soap_copy_mcu__VideoSinkResponse soap_copy_mcu__VideoSink

#ifndef SOAP_TYPE_mcu__VideoSink
#define SOAP_TYPE_mcu__VideoSink (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__VideoSink(struct soap*, struct mcu__VideoSink *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VideoSink(struct soap*, const struct mcu__VideoSink *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VideoSink(struct soap*, const char*, int, const struct mcu__VideoSink *, const char*);
SOAP_FMAC3 struct mcu__VideoSink * SOAP_FMAC4 soap_in_mcu__VideoSink(struct soap*, const char*, struct mcu__VideoSink *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VideoSink(struct soap*, const struct mcu__VideoSink *, const char*, const char*);

#ifndef soap_write_mcu__VideoSink
#define soap_write_mcu__VideoSink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VideoSink(soap, data),0) || soap_put_mcu__VideoSink(soap, data, "mcu:VideoSink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSink * SOAP_FMAC4 soap_get_mcu__VideoSink(struct soap*, struct mcu__VideoSink *, const char*, const char*);

#ifndef soap_read_mcu__VideoSink
#define soap_read_mcu__VideoSink(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VideoSink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__VideoSink * SOAP_FMAC2 soap_instantiate_mcu__VideoSink(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__VideoSink * soap_new_mcu__VideoSink(struct soap *soap, int n = -1) { return soap_instantiate_mcu__VideoSink(soap, n, NULL, NULL, NULL); }

inline struct mcu__VideoSink * soap_new_req_mcu__VideoSink(struct soap *soap, int sinkid, int sourceid, struct mcu__MediaEndpoint& endpoint) { struct mcu__VideoSink *_p = soap_instantiate_mcu__VideoSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSink(soap, _p); _p->sinkid = sinkid; _p->sourceid = sourceid; _p->endpoint = endpoint; } return _p; }

inline struct mcu__VideoSink * soap_new_set_mcu__VideoSink(struct soap *soap, int sinkid, int sourceid, struct mcu__MediaEndpoint& endpoint) { struct mcu__VideoSink *_p = soap_instantiate_mcu__VideoSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSink(soap, _p); _p->sinkid = sinkid; _p->sourceid = sourceid; _p->endpoint = endpoint; } return _p; }

inline void soap_delete_mcu__VideoSink(struct soap *soap, struct mcu__VideoSink *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__VideoSink(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__delVideoSource
#define SOAP_TYPE_mcu__delVideoSource (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__delVideoSource(struct soap*, struct mcu__delVideoSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__delVideoSource(struct soap*, const struct mcu__delVideoSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__delVideoSource(struct soap*, const char*, int, const struct mcu__delVideoSource *, const char*);
SOAP_FMAC3 struct mcu__delVideoSource * SOAP_FMAC4 soap_in_mcu__delVideoSource(struct soap*, const char*, struct mcu__delVideoSource *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__delVideoSource(struct soap*, const struct mcu__delVideoSource *, const char*, const char*);

#ifndef soap_write_mcu__delVideoSource
#define soap_write_mcu__delVideoSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__delVideoSource(soap, data),0) || soap_put_mcu__delVideoSource(soap, data, "mcu:delVideoSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__delVideoSource * SOAP_FMAC4 soap_get_mcu__delVideoSource(struct soap*, struct mcu__delVideoSource *, const char*, const char*);

#ifndef soap_read_mcu__delVideoSource
#define soap_read_mcu__delVideoSource(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__delVideoSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__delVideoSource * SOAP_FMAC2 soap_instantiate_mcu__delVideoSource(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__delVideoSource * soap_new_mcu__delVideoSource(struct soap *soap, int n = -1) { return soap_instantiate_mcu__delVideoSource(soap, n, NULL, NULL, NULL); }

inline struct mcu__delVideoSource * soap_new_req_mcu__delVideoSource(struct soap *soap, int confid, int memberid, int sourceid) { struct mcu__delVideoSource *_p = soap_instantiate_mcu__delVideoSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delVideoSource(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->sourceid = sourceid; } return _p; }

inline struct mcu__delVideoSource * soap_new_set_mcu__delVideoSource(struct soap *soap, int confid, int memberid, int sourceid) { struct mcu__delVideoSource *_p = soap_instantiate_mcu__delVideoSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__delVideoSource(soap, _p); _p->confid = confid; _p->memberid = memberid; _p->sourceid = sourceid; } return _p; }

inline void soap_delete_mcu__delVideoSource(struct soap *soap, struct mcu__delVideoSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__delVideoSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__addVideoSource
#define SOAP_TYPE_mcu__addVideoSource (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__addVideoSource(struct soap*, struct mcu__addVideoSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__addVideoSource(struct soap*, const struct mcu__addVideoSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__addVideoSource(struct soap*, const char*, int, const struct mcu__addVideoSource *, const char*);
SOAP_FMAC3 struct mcu__addVideoSource * SOAP_FMAC4 soap_in_mcu__addVideoSource(struct soap*, const char*, struct mcu__addVideoSource *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__addVideoSource(struct soap*, const struct mcu__addVideoSource *, const char*, const char*);

#ifndef soap_write_mcu__addVideoSource
#define soap_write_mcu__addVideoSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__addVideoSource(soap, data),0) || soap_put_mcu__addVideoSource(soap, data, "mcu:addVideoSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__addVideoSource * SOAP_FMAC4 soap_get_mcu__addVideoSource(struct soap*, struct mcu__addVideoSource *, const char*, const char*);

#ifndef soap_read_mcu__addVideoSource
#define soap_read_mcu__addVideoSource(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__addVideoSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__addVideoSource * SOAP_FMAC2 soap_instantiate_mcu__addVideoSource(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__addVideoSource * soap_new_mcu__addVideoSource(struct soap *soap, int n = -1) { return soap_instantiate_mcu__addVideoSource(soap, n, NULL, NULL, NULL); }

inline struct mcu__addVideoSource * soap_new_req_mcu__addVideoSource(struct soap *soap, int confid, int memberid) { struct mcu__addVideoSource *_p = soap_instantiate_mcu__addVideoSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addVideoSource(soap, _p); _p->confid = confid; _p->memberid = memberid; } return _p; }

inline struct mcu__addVideoSource * soap_new_set_mcu__addVideoSource(struct soap *soap, int confid, int memberid) { struct mcu__addVideoSource *_p = soap_instantiate_mcu__addVideoSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__addVideoSource(soap, _p); _p->confid = confid; _p->memberid = memberid; } return _p; }

inline void soap_delete_mcu__addVideoSource(struct soap *soap, struct mcu__addVideoSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__addVideoSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__VideoSourceArray
#define SOAP_TYPE_mcu__VideoSourceArray (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__VideoSourceArray(struct soap*, struct mcu__VideoSourceArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VideoSourceArray(struct soap*, struct mcu__VideoSourceArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VideoSourceArray(struct soap*, const char*, int, const struct mcu__VideoSourceArray *, const char*);
SOAP_FMAC3 struct mcu__VideoSourceArray * SOAP_FMAC4 soap_in_mcu__VideoSourceArray(struct soap*, const char*, struct mcu__VideoSourceArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VideoSourceArray(struct soap*, const struct mcu__VideoSourceArray *, const char*, const char*);

#ifndef soap_write_mcu__VideoSourceArray
#define soap_write_mcu__VideoSourceArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VideoSourceArray(soap, data),0) || soap_put_mcu__VideoSourceArray(soap, data, "mcu:VideoSourceArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSourceArray * SOAP_FMAC4 soap_get_mcu__VideoSourceArray(struct soap*, struct mcu__VideoSourceArray *, const char*, const char*);

#ifndef soap_read_mcu__VideoSourceArray
#define soap_read_mcu__VideoSourceArray(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VideoSourceArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__VideoSourceArray * SOAP_FMAC2 soap_instantiate_mcu__VideoSourceArray(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__VideoSourceArray * soap_new_mcu__VideoSourceArray(struct soap *soap, int n = -1) { return soap_instantiate_mcu__VideoSourceArray(soap, n, NULL, NULL, NULL); }

inline struct mcu__VideoSourceArray * soap_new_req_mcu__VideoSourceArray(struct soap *soap) { struct mcu__VideoSourceArray *_p = soap_instantiate_mcu__VideoSourceArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSourceArray(soap, _p); } return _p; }

inline struct mcu__VideoSourceArray * soap_new_set_mcu__VideoSourceArray(struct soap *soap, struct mcu__VideoSource *__ptr, int __size) { struct mcu__VideoSourceArray *_p = soap_instantiate_mcu__VideoSourceArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSourceArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_mcu__VideoSourceArray(struct soap *soap, struct mcu__VideoSourceArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__VideoSourceArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__VideoSourceResponse
#define SOAP_TYPE_mcu__VideoSourceResponse (22)
#endif

#define soap_default_mcu__VideoSourceResponse(soap, a) soap_default_mcu__VideoSource(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VideoSourceResponse(struct soap*, const struct mcu__VideoSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VideoSourceResponse(struct soap*, const char*, int, const struct mcu__VideoSource *, const char*);
SOAP_FMAC3 struct mcu__VideoSource * SOAP_FMAC4 soap_in_mcu__VideoSourceResponse(struct soap*, const char*, struct mcu__VideoSource *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VideoSourceResponse(struct soap*, const struct mcu__VideoSource *, const char*, const char*);

#ifndef soap_write_mcu__VideoSourceResponse
#define soap_write_mcu__VideoSourceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VideoSourceResponse(soap, data),0) || soap_put_mcu__VideoSourceResponse(soap, data, "mcu:VideoSourceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSource * SOAP_FMAC4 soap_get_mcu__VideoSourceResponse(struct soap*, struct mcu__VideoSource *, const char*, const char*);

#ifndef soap_read_mcu__VideoSourceResponse
#define soap_read_mcu__VideoSourceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VideoSourceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__VideoSourceResponse soap_instantiate_mcu__VideoSource


#define soap_copy_mcu__VideoSourceResponse soap_copy_mcu__VideoSource

#ifndef SOAP_TYPE_mcu__VideoSource
#define SOAP_TYPE_mcu__VideoSource (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__VideoSource(struct soap*, struct mcu__VideoSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VideoSource(struct soap*, const struct mcu__VideoSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VideoSource(struct soap*, const char*, int, const struct mcu__VideoSource *, const char*);
SOAP_FMAC3 struct mcu__VideoSource * SOAP_FMAC4 soap_in_mcu__VideoSource(struct soap*, const char*, struct mcu__VideoSource *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VideoSource(struct soap*, const struct mcu__VideoSource *, const char*, const char*);

#ifndef soap_write_mcu__VideoSource
#define soap_write_mcu__VideoSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VideoSource(soap, data),0) || soap_put_mcu__VideoSource(soap, data, "mcu:VideoSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSource * SOAP_FMAC4 soap_get_mcu__VideoSource(struct soap*, struct mcu__VideoSource *, const char*, const char*);

#ifndef soap_read_mcu__VideoSource
#define soap_read_mcu__VideoSource(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VideoSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__VideoSource * SOAP_FMAC2 soap_instantiate_mcu__VideoSource(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__VideoSource * soap_new_mcu__VideoSource(struct soap *soap, int n = -1) { return soap_instantiate_mcu__VideoSource(soap, n, NULL, NULL, NULL); }

inline struct mcu__VideoSource * soap_new_req_mcu__VideoSource(struct soap *soap, int sourceid, int codec, struct mcu__MediaEndpoint& endpoint) { struct mcu__VideoSource *_p = soap_instantiate_mcu__VideoSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSource(soap, _p); _p->sourceid = sourceid; _p->codec = codec; _p->endpoint = endpoint; } return _p; }

inline struct mcu__VideoSource * soap_new_set_mcu__VideoSource(struct soap *soap, int sourceid, int codec, struct mcu__MediaEndpoint& endpoint) { struct mcu__VideoSource *_p = soap_instantiate_mcu__VideoSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__VideoSource(soap, _p); _p->sourceid = sourceid; _p->codec = codec; _p->endpoint = endpoint; } return _p; }

inline void soap_delete_mcu__VideoSource(struct soap *soap, struct mcu__VideoSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__VideoSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__MediaEndpoint
#define SOAP_TYPE_mcu__MediaEndpoint (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__MediaEndpoint(struct soap*, struct mcu__MediaEndpoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__MediaEndpoint(struct soap*, const struct mcu__MediaEndpoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__MediaEndpoint(struct soap*, const char*, int, const struct mcu__MediaEndpoint *, const char*);
SOAP_FMAC3 struct mcu__MediaEndpoint * SOAP_FMAC4 soap_in_mcu__MediaEndpoint(struct soap*, const char*, struct mcu__MediaEndpoint *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__MediaEndpoint(struct soap*, const struct mcu__MediaEndpoint *, const char*, const char*);

#ifndef soap_write_mcu__MediaEndpoint
#define soap_write_mcu__MediaEndpoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__MediaEndpoint(soap, data),0) || soap_put_mcu__MediaEndpoint(soap, data, "mcu:MediaEndpoint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__MediaEndpoint * SOAP_FMAC4 soap_get_mcu__MediaEndpoint(struct soap*, struct mcu__MediaEndpoint *, const char*, const char*);

#ifndef soap_read_mcu__MediaEndpoint
#define soap_read_mcu__MediaEndpoint(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__MediaEndpoint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__MediaEndpoint * SOAP_FMAC2 soap_instantiate_mcu__MediaEndpoint(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__MediaEndpoint * soap_new_mcu__MediaEndpoint(struct soap *soap, int n = -1) { return soap_instantiate_mcu__MediaEndpoint(soap, n, NULL, NULL, NULL); }

inline struct mcu__MediaEndpoint * soap_new_req_mcu__MediaEndpoint(struct soap *soap, int peerrtp, int peerrtcp, int rtp, int rtcp) { struct mcu__MediaEndpoint *_p = soap_instantiate_mcu__MediaEndpoint(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__MediaEndpoint(soap, _p); _p->peerrtp = peerrtp; _p->peerrtcp = peerrtcp; _p->rtp = rtp; _p->rtcp = rtcp; } return _p; }

inline struct mcu__MediaEndpoint * soap_new_set_mcu__MediaEndpoint(struct soap *soap, char *peerip, int peerrtp, int peerrtcp, char *ip, int rtp, int rtcp) { struct mcu__MediaEndpoint *_p = soap_instantiate_mcu__MediaEndpoint(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__MediaEndpoint(soap, _p); _p->peerip = peerip; _p->peerrtp = peerrtp; _p->peerrtcp = peerrtcp; _p->ip = ip; _p->rtp = rtp; _p->rtcp = rtcp; } return _p; }

inline void soap_delete_mcu__MediaEndpoint(struct soap *soap, struct mcu__MediaEndpoint *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__MediaEndpoint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__getStatus
#define SOAP_TYPE_mcu__getStatus (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__getStatus(struct soap*, struct mcu__getStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__getStatus(struct soap*, const struct mcu__getStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__getStatus(struct soap*, const char*, int, const struct mcu__getStatus *, const char*);
SOAP_FMAC3 struct mcu__getStatus * SOAP_FMAC4 soap_in_mcu__getStatus(struct soap*, const char*, struct mcu__getStatus *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__getStatus(struct soap*, const struct mcu__getStatus *, const char*, const char*);

#ifndef soap_write_mcu__getStatus
#define soap_write_mcu__getStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__getStatus(soap, data),0) || soap_put_mcu__getStatus(soap, data, "mcu:getStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__getStatus * SOAP_FMAC4 soap_get_mcu__getStatus(struct soap*, struct mcu__getStatus *, const char*, const char*);

#ifndef soap_read_mcu__getStatus
#define soap_read_mcu__getStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__getStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__getStatus * SOAP_FMAC2 soap_instantiate_mcu__getStatus(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__getStatus * soap_new_mcu__getStatus(struct soap *soap, int n = -1) { return soap_instantiate_mcu__getStatus(soap, n, NULL, NULL, NULL); }

inline struct mcu__getStatus * soap_new_req_mcu__getStatus(struct soap *soap) { struct mcu__getStatus *_p = soap_instantiate_mcu__getStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__getStatus(soap, _p); } return _p; }

inline struct mcu__getStatus * soap_new_set_mcu__getStatus(struct soap *soap, void *_param_2) { struct mcu__getStatus *_p = soap_instantiate_mcu__getStatus(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__getStatus(soap, _p); _p->_param_2 = _param_2; } return _p; }

inline void soap_delete_mcu__getStatus(struct soap *soap, struct mcu__getStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__getStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__StatusResponse
#define SOAP_TYPE_mcu__StatusResponse (16)
#endif

#define soap_default_mcu__StatusResponse(soap, a) soap_default_mcu__Status(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__StatusResponse(struct soap*, const struct mcu__Status *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__StatusResponse(struct soap*, const char*, int, const struct mcu__Status *, const char*);
SOAP_FMAC3 struct mcu__Status * SOAP_FMAC4 soap_in_mcu__StatusResponse(struct soap*, const char*, struct mcu__Status *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__StatusResponse(struct soap*, const struct mcu__Status *, const char*, const char*);

#ifndef soap_write_mcu__StatusResponse
#define soap_write_mcu__StatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__StatusResponse(soap, data),0) || soap_put_mcu__StatusResponse(soap, data, "mcu:StatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Status * SOAP_FMAC4 soap_get_mcu__StatusResponse(struct soap*, struct mcu__Status *, const char*, const char*);

#ifndef soap_read_mcu__StatusResponse
#define soap_read_mcu__StatusResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__StatusResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__StatusResponse soap_instantiate_mcu__Status


#define soap_copy_mcu__StatusResponse soap_copy_mcu__Status

#ifndef SOAP_TYPE_mcu__Status
#define SOAP_TYPE_mcu__Status (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__Status(struct soap*, struct mcu__Status *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__Status(struct soap*, const struct mcu__Status *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__Status(struct soap*, const char*, int, const struct mcu__Status *, const char*);
SOAP_FMAC3 struct mcu__Status * SOAP_FMAC4 soap_in_mcu__Status(struct soap*, const char*, struct mcu__Status *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__Status(struct soap*, const struct mcu__Status *, const char*, const char*);

#ifndef soap_write_mcu__Status
#define soap_write_mcu__Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__Status(soap, data),0) || soap_put_mcu__Status(soap, data, "mcu:Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Status * SOAP_FMAC4 soap_get_mcu__Status(struct soap*, struct mcu__Status *, const char*, const char*);

#ifndef soap_read_mcu__Status
#define soap_read_mcu__Status(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__Status(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__Status * SOAP_FMAC2 soap_instantiate_mcu__Status(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__Status * soap_new_mcu__Status(struct soap *soap, int n = -1) { return soap_instantiate_mcu__Status(soap, n, NULL, NULL, NULL); }

inline struct mcu__Status * soap_new_req_mcu__Status(struct soap *soap, double uptime, int conferences, double up_kbps5, double up_kbps60, double up_kbps300, double down_kbps5, double down_kbps60, double down_kbps300, double cpu, double mem, double up_lost_ratio, double down_lost_ratio) { struct mcu__Status *_p = soap_instantiate_mcu__Status(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Status(soap, _p); _p->uptime = uptime; _p->conferences = conferences; _p->up_kbps5 = up_kbps5; _p->up_kbps60 = up_kbps60; _p->up_kbps300 = up_kbps300; _p->down_kbps5 = down_kbps5; _p->down_kbps60 = down_kbps60; _p->down_kbps300 = down_kbps300; _p->cpu = cpu; _p->mem = mem; _p->up_lost_ratio = up_lost_ratio; _p->down_lost_ratio = down_lost_ratio; } return _p; }

inline struct mcu__Status * soap_new_set_mcu__Status(struct soap *soap, double uptime, int conferences, double up_kbps5, double up_kbps60, double up_kbps300, double down_kbps5, double down_kbps60, double down_kbps300, double cpu, double mem, double up_lost_ratio, double down_lost_ratio) { struct mcu__Status *_p = soap_instantiate_mcu__Status(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Status(soap, _p); _p->uptime = uptime; _p->conferences = conferences; _p->up_kbps5 = up_kbps5; _p->up_kbps60 = up_kbps60; _p->up_kbps300 = up_kbps300; _p->down_kbps5 = down_kbps5; _p->down_kbps60 = down_kbps60; _p->down_kbps300 = down_kbps300; _p->cpu = cpu; _p->mem = mem; _p->up_lost_ratio = up_lost_ratio; _p->down_lost_ratio = down_lost_ratio; } return _p; }

inline void soap_delete_mcu__Status(struct soap *soap, struct mcu__Status *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__Status(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__getVersion
#define SOAP_TYPE_mcu__getVersion (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__getVersion(struct soap*, struct mcu__getVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__getVersion(struct soap*, const struct mcu__getVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__getVersion(struct soap*, const char*, int, const struct mcu__getVersion *, const char*);
SOAP_FMAC3 struct mcu__getVersion * SOAP_FMAC4 soap_in_mcu__getVersion(struct soap*, const char*, struct mcu__getVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__getVersion(struct soap*, const struct mcu__getVersion *, const char*, const char*);

#ifndef soap_write_mcu__getVersion
#define soap_write_mcu__getVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__getVersion(soap, data),0) || soap_put_mcu__getVersion(soap, data, "mcu:getVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__getVersion * SOAP_FMAC4 soap_get_mcu__getVersion(struct soap*, struct mcu__getVersion *, const char*, const char*);

#ifndef soap_read_mcu__getVersion
#define soap_read_mcu__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__getVersion * SOAP_FMAC2 soap_instantiate_mcu__getVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__getVersion * soap_new_mcu__getVersion(struct soap *soap, int n = -1) { return soap_instantiate_mcu__getVersion(soap, n, NULL, NULL, NULL); }

inline struct mcu__getVersion * soap_new_req_mcu__getVersion(struct soap *soap) { struct mcu__getVersion *_p = soap_instantiate_mcu__getVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__getVersion(soap, _p); } return _p; }

inline struct mcu__getVersion * soap_new_set_mcu__getVersion(struct soap *soap, void *_param_1) { struct mcu__getVersion *_p = soap_instantiate_mcu__getVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__getVersion(soap, _p); _p->_param_1 = _param_1; } return _p; }

inline void soap_delete_mcu__getVersion(struct soap *soap, struct mcu__getVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mcu__VersionResponse
#define SOAP_TYPE_mcu__VersionResponse (8)
#endif

#define soap_default_mcu__VersionResponse(soap, a) soap_default_mcu__Version(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__VersionResponse(struct soap*, const struct mcu__Version *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__VersionResponse(struct soap*, const char*, int, const struct mcu__Version *, const char*);
SOAP_FMAC3 struct mcu__Version * SOAP_FMAC4 soap_in_mcu__VersionResponse(struct soap*, const char*, struct mcu__Version *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__VersionResponse(struct soap*, const struct mcu__Version *, const char*, const char*);

#ifndef soap_write_mcu__VersionResponse
#define soap_write_mcu__VersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__VersionResponse(soap, data),0) || soap_put_mcu__VersionResponse(soap, data, "mcu:VersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Version * SOAP_FMAC4 soap_get_mcu__VersionResponse(struct soap*, struct mcu__Version *, const char*, const char*);

#ifndef soap_read_mcu__VersionResponse
#define soap_read_mcu__VersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__VersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_mcu__VersionResponse soap_instantiate_mcu__Version


#define soap_copy_mcu__VersionResponse soap_copy_mcu__Version

#ifndef SOAP_TYPE_mcu__Version
#define SOAP_TYPE_mcu__Version (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mcu__Version(struct soap*, struct mcu__Version *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mcu__Version(struct soap*, const struct mcu__Version *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mcu__Version(struct soap*, const char*, int, const struct mcu__Version *, const char*);
SOAP_FMAC3 struct mcu__Version * SOAP_FMAC4 soap_in_mcu__Version(struct soap*, const char*, struct mcu__Version *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_mcu__Version(struct soap*, const struct mcu__Version *, const char*, const char*);

#ifndef soap_write_mcu__Version
#define soap_write_mcu__Version(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_mcu__Version(soap, data),0) || soap_put_mcu__Version(soap, data, "mcu:Version", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Version * SOAP_FMAC4 soap_get_mcu__Version(struct soap*, struct mcu__Version *, const char*, const char*);

#ifndef soap_read_mcu__Version
#define soap_read_mcu__Version(soap, data) ( soap_begin_recv(soap) || !soap_get_mcu__Version(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct mcu__Version * SOAP_FMAC2 soap_instantiate_mcu__Version(struct soap*, int, const char*, const char*, size_t*);

inline struct mcu__Version * soap_new_mcu__Version(struct soap *soap, int n = -1) { return soap_instantiate_mcu__Version(soap, n, NULL, NULL, NULL); }

inline struct mcu__Version * soap_new_req_mcu__Version(struct soap *soap, int major, int minor) { struct mcu__Version *_p = soap_instantiate_mcu__Version(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Version(soap, _p); _p->major = major; _p->minor = minor; } return _p; }

inline struct mcu__Version * soap_new_set_mcu__Version(struct soap *soap, int major, int minor, char *desc) { struct mcu__Version *_p = soap_instantiate_mcu__Version(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_mcu__Version(soap, _p); _p->major = major; _p->minor = minor; _p->desc = desc; } return _p; }

inline void soap_delete_mcu__Version(struct soap *soap, struct mcu__Version *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mcu__Version(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTomcu__Conference
#define SOAP_TYPE_PointerTomcu__Conference (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomcu__Conference(struct soap*, struct mcu__Conference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomcu__Conference(struct soap*, const char *, int, struct mcu__Conference *const*, const char *);
SOAP_FMAC3 struct mcu__Conference ** SOAP_FMAC4 soap_in_PointerTomcu__Conference(struct soap*, const char*, struct mcu__Conference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomcu__Conference(struct soap*, struct mcu__Conference *const*, const char*, const char*);

#ifndef soap_write_PointerTomcu__Conference
#define soap_write_PointerTomcu__Conference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTomcu__Conference(soap, data),0) || soap_put_PointerTomcu__Conference(soap, data, "mcu:Conference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Conference ** SOAP_FMAC4 soap_get_PointerTomcu__Conference(struct soap*, struct mcu__Conference **, const char*, const char*);

#ifndef soap_read_PointerTomcu__Conference
#define soap_read_PointerTomcu__Conference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomcu__Conference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTomcu__Member
#define SOAP_TYPE_PointerTomcu__Member (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomcu__Member(struct soap*, struct mcu__Member *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomcu__Member(struct soap*, const char *, int, struct mcu__Member *const*, const char *);
SOAP_FMAC3 struct mcu__Member ** SOAP_FMAC4 soap_in_PointerTomcu__Member(struct soap*, const char*, struct mcu__Member **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomcu__Member(struct soap*, struct mcu__Member *const*, const char*, const char*);

#ifndef soap_write_PointerTomcu__Member
#define soap_write_PointerTomcu__Member(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTomcu__Member(soap, data),0) || soap_put_PointerTomcu__Member(soap, data, "mcu:Member", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__Member ** SOAP_FMAC4 soap_get_PointerTomcu__Member(struct soap*, struct mcu__Member **, const char*, const char*);

#ifndef soap_read_PointerTomcu__Member
#define soap_read_PointerTomcu__Member(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomcu__Member(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTomcu__VideoSink
#define SOAP_TYPE_PointerTomcu__VideoSink (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomcu__VideoSink(struct soap*, struct mcu__VideoSink *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomcu__VideoSink(struct soap*, const char *, int, struct mcu__VideoSink *const*, const char *);
SOAP_FMAC3 struct mcu__VideoSink ** SOAP_FMAC4 soap_in_PointerTomcu__VideoSink(struct soap*, const char*, struct mcu__VideoSink **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomcu__VideoSink(struct soap*, struct mcu__VideoSink *const*, const char*, const char*);

#ifndef soap_write_PointerTomcu__VideoSink
#define soap_write_PointerTomcu__VideoSink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTomcu__VideoSink(soap, data),0) || soap_put_PointerTomcu__VideoSink(soap, data, "mcu:VideoSink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSink ** SOAP_FMAC4 soap_get_PointerTomcu__VideoSink(struct soap*, struct mcu__VideoSink **, const char*, const char*);

#ifndef soap_read_PointerTomcu__VideoSink
#define soap_read_PointerTomcu__VideoSink(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomcu__VideoSink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTomcu__VideoSource
#define SOAP_TYPE_PointerTomcu__VideoSource (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomcu__VideoSource(struct soap*, struct mcu__VideoSource *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomcu__VideoSource(struct soap*, const char *, int, struct mcu__VideoSource *const*, const char *);
SOAP_FMAC3 struct mcu__VideoSource ** SOAP_FMAC4 soap_in_PointerTomcu__VideoSource(struct soap*, const char*, struct mcu__VideoSource **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomcu__VideoSource(struct soap*, struct mcu__VideoSource *const*, const char*, const char*);

#ifndef soap_write_PointerTomcu__VideoSource
#define soap_write_PointerTomcu__VideoSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTomcu__VideoSource(soap, data),0) || soap_put_PointerTomcu__VideoSource(soap, data, "mcu:VideoSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct mcu__VideoSource ** SOAP_FMAC4 soap_get_PointerTomcu__VideoSource(struct soap*, struct mcu__VideoSource **, const char*, const char*);

#ifndef soap_read_PointerTomcu__VideoSource
#define soap_read_PointerTomcu__VideoSource(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomcu__VideoSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
