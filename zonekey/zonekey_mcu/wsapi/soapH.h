/* soapH.h
   Generated by gSOAP 2.8.17r from zonekey.mcu.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_long(soap, data),0) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( soap_begin_recv(soap) || !soap_get_long(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_double(soap, data),0) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_zkmcu__getParams
#define SOAP_TYPE_zkmcu__getParams (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__getParams(struct soap*, struct zkmcu__getParams *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__getParams(struct soap*, const struct zkmcu__getParams *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__getParams(struct soap*, const char*, int, const struct zkmcu__getParams *, const char*);
SOAP_FMAC3 struct zkmcu__getParams * SOAP_FMAC4 soap_in_zkmcu__getParams(struct soap*, const char*, struct zkmcu__getParams *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__getParams(struct soap*, const struct zkmcu__getParams *, const char*, const char*);

#ifndef soap_write_zkmcu__getParams
#define soap_write_zkmcu__getParams(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__getParams(soap, data),0) || soap_put_zkmcu__getParams(soap, data, "zkmcu:getParams", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__getParams * SOAP_FMAC4 soap_get_zkmcu__getParams(struct soap*, struct zkmcu__getParams *, const char*, const char*);

#ifndef soap_read_zkmcu__getParams
#define soap_read_zkmcu__getParams(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__getParams(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__getParams * SOAP_FMAC2 soap_instantiate_zkmcu__getParams(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__getParams * soap_new_zkmcu__getParams(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__getParams(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__getParams * soap_new_req_zkmcu__getParams(struct soap *soap, int cid) { struct zkmcu__getParams *_p = soap_instantiate_zkmcu__getParams(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getParams(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__getParams * soap_new_set_zkmcu__getParams(struct soap *soap, int cid) { struct zkmcu__getParams *_p = soap_instantiate_zkmcu__getParams(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getParams(soap, _p); _p->cid = cid; } return _p; }

inline void soap_delete_zkmcu__getParams(struct soap *soap, struct zkmcu__getParams *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__getParams(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__getParamsResponse
#define SOAP_TYPE_zkmcu__getParamsResponse (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__getParamsResponse(struct soap*, struct zkmcu__getParamsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__getParamsResponse(struct soap*, const struct zkmcu__getParamsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__getParamsResponse(struct soap*, const char*, int, const struct zkmcu__getParamsResponse *, const char*);
SOAP_FMAC3 struct zkmcu__getParamsResponse * SOAP_FMAC4 soap_in_zkmcu__getParamsResponse(struct soap*, const char*, struct zkmcu__getParamsResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__getParamsResponse(struct soap*, const struct zkmcu__getParamsResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__getParamsResponse
#define soap_write_zkmcu__getParamsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__getParamsResponse(soap, data),0) || soap_put_zkmcu__getParamsResponse(soap, data, "zkmcu:getParamsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__getParamsResponse * SOAP_FMAC4 soap_get_zkmcu__getParamsResponse(struct soap*, struct zkmcu__getParamsResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__getParamsResponse
#define soap_read_zkmcu__getParamsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__getParamsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__getParamsResponse * SOAP_FMAC2 soap_instantiate_zkmcu__getParamsResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__getParamsResponse * soap_new_zkmcu__getParamsResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__getParamsResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__getParamsResponse * soap_new_req_zkmcu__getParamsResponse(struct soap *soap, struct zkmcu__KeyValueArray& res) { struct zkmcu__getParamsResponse *_p = soap_instantiate_zkmcu__getParamsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getParamsResponse(soap, _p); _p->res = res; } return _p; }

inline struct zkmcu__getParamsResponse * soap_new_set_zkmcu__getParamsResponse(struct soap *soap, struct zkmcu__KeyValueArray& res) { struct zkmcu__getParamsResponse *_p = soap_instantiate_zkmcu__getParamsResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getParamsResponse(soap, _p); _p->res = res; } return _p; }

inline void soap_delete_zkmcu__getParamsResponse(struct soap *soap, struct zkmcu__getParamsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__getParamsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__setParams
#define SOAP_TYPE_zkmcu__setParams (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__setParams(struct soap*, struct zkmcu__setParams *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__setParams(struct soap*, const struct zkmcu__setParams *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__setParams(struct soap*, const char*, int, const struct zkmcu__setParams *, const char*);
SOAP_FMAC3 struct zkmcu__setParams * SOAP_FMAC4 soap_in_zkmcu__setParams(struct soap*, const char*, struct zkmcu__setParams *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__setParams(struct soap*, const struct zkmcu__setParams *, const char*, const char*);

#ifndef soap_write_zkmcu__setParams
#define soap_write_zkmcu__setParams(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__setParams(soap, data),0) || soap_put_zkmcu__setParams(soap, data, "zkmcu:setParams", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__setParams * SOAP_FMAC4 soap_get_zkmcu__setParams(struct soap*, struct zkmcu__setParams *, const char*, const char*);

#ifndef soap_read_zkmcu__setParams
#define soap_read_zkmcu__setParams(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__setParams(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__setParams * SOAP_FMAC2 soap_instantiate_zkmcu__setParams(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__setParams * soap_new_zkmcu__setParams(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__setParams(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__setParams * soap_new_req_zkmcu__setParams(struct soap *soap, int cid) { struct zkmcu__setParams *_p = soap_instantiate_zkmcu__setParams(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__setParams(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__setParams * soap_new_set_zkmcu__setParams(struct soap *soap, int cid, struct zkmcu__KeyValueArray *req) { struct zkmcu__setParams *_p = soap_instantiate_zkmcu__setParams(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__setParams(soap, _p); _p->cid = cid; _p->req = req; } return _p; }

inline void soap_delete_zkmcu__setParams(struct soap *soap, struct zkmcu__setParams *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__setParams(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__KeyValueArrayResponse
#define SOAP_TYPE_zkmcu__KeyValueArrayResponse (80)
#endif

#define soap_default_zkmcu__KeyValueArrayResponse(soap, a) soap_default_zkmcu__KeyValueArray(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__KeyValueArrayResponse(struct soap*, struct zkmcu__KeyValueArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__KeyValueArrayResponse(struct soap*, const char*, int, const struct zkmcu__KeyValueArray *, const char*);
SOAP_FMAC3 struct zkmcu__KeyValueArray * SOAP_FMAC4 soap_in_zkmcu__KeyValueArrayResponse(struct soap*, const char*, struct zkmcu__KeyValueArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__KeyValueArrayResponse(struct soap*, const struct zkmcu__KeyValueArray *, const char*, const char*);

#ifndef soap_write_zkmcu__KeyValueArrayResponse
#define soap_write_zkmcu__KeyValueArrayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__KeyValueArrayResponse(soap, data),0) || soap_put_zkmcu__KeyValueArrayResponse(soap, data, "zkmcu:KeyValueArrayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__KeyValueArray * SOAP_FMAC4 soap_get_zkmcu__KeyValueArrayResponse(struct soap*, struct zkmcu__KeyValueArray *, const char*, const char*);

#ifndef soap_read_zkmcu__KeyValueArrayResponse
#define soap_read_zkmcu__KeyValueArrayResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__KeyValueArrayResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_zkmcu__KeyValueArrayResponse soap_instantiate_zkmcu__KeyValueArray


#define soap_copy_zkmcu__KeyValueArrayResponse soap_copy_zkmcu__KeyValueArray

#ifndef SOAP_TYPE_zkmcu__KeyValueArray
#define SOAP_TYPE_zkmcu__KeyValueArray (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__KeyValueArray(struct soap*, struct zkmcu__KeyValueArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__KeyValueArray(struct soap*, struct zkmcu__KeyValueArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__KeyValueArray(struct soap*, const char*, int, const struct zkmcu__KeyValueArray *, const char*);
SOAP_FMAC3 struct zkmcu__KeyValueArray * SOAP_FMAC4 soap_in_zkmcu__KeyValueArray(struct soap*, const char*, struct zkmcu__KeyValueArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__KeyValueArray(struct soap*, const struct zkmcu__KeyValueArray *, const char*, const char*);

#ifndef soap_write_zkmcu__KeyValueArray
#define soap_write_zkmcu__KeyValueArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__KeyValueArray(soap, data),0) || soap_put_zkmcu__KeyValueArray(soap, data, "zkmcu:KeyValueArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__KeyValueArray * SOAP_FMAC4 soap_get_zkmcu__KeyValueArray(struct soap*, struct zkmcu__KeyValueArray *, const char*, const char*);

#ifndef soap_read_zkmcu__KeyValueArray
#define soap_read_zkmcu__KeyValueArray(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__KeyValueArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__KeyValueArray * SOAP_FMAC2 soap_instantiate_zkmcu__KeyValueArray(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__KeyValueArray * soap_new_zkmcu__KeyValueArray(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__KeyValueArray(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__KeyValueArray * soap_new_req_zkmcu__KeyValueArray(struct soap *soap) { struct zkmcu__KeyValueArray *_p = soap_instantiate_zkmcu__KeyValueArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__KeyValueArray(soap, _p); } return _p; }

inline struct zkmcu__KeyValueArray * soap_new_set_zkmcu__KeyValueArray(struct soap *soap, struct zkmcu__KeyValue *__ptr, int __size) { struct zkmcu__KeyValueArray *_p = soap_instantiate_zkmcu__KeyValueArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__KeyValueArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_zkmcu__KeyValueArray(struct soap *soap, struct zkmcu__KeyValueArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__KeyValueArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__KeyValue
#define SOAP_TYPE_zkmcu__KeyValue (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__KeyValue(struct soap*, struct zkmcu__KeyValue *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__KeyValue(struct soap*, const struct zkmcu__KeyValue *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__KeyValue(struct soap*, const char*, int, const struct zkmcu__KeyValue *, const char*);
SOAP_FMAC3 struct zkmcu__KeyValue * SOAP_FMAC4 soap_in_zkmcu__KeyValue(struct soap*, const char*, struct zkmcu__KeyValue *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__KeyValue(struct soap*, const struct zkmcu__KeyValue *, const char*, const char*);

#ifndef soap_write_zkmcu__KeyValue
#define soap_write_zkmcu__KeyValue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__KeyValue(soap, data),0) || soap_put_zkmcu__KeyValue(soap, data, "zkmcu:KeyValue", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__KeyValue * SOAP_FMAC4 soap_get_zkmcu__KeyValue(struct soap*, struct zkmcu__KeyValue *, const char*, const char*);

#ifndef soap_read_zkmcu__KeyValue
#define soap_read_zkmcu__KeyValue(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__KeyValue(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__KeyValue * SOAP_FMAC2 soap_instantiate_zkmcu__KeyValue(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__KeyValue * soap_new_zkmcu__KeyValue(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__KeyValue(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__KeyValue * soap_new_req_zkmcu__KeyValue(struct soap *soap) { struct zkmcu__KeyValue *_p = soap_instantiate_zkmcu__KeyValue(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__KeyValue(soap, _p); } return _p; }

inline struct zkmcu__KeyValue * soap_new_set_zkmcu__KeyValue(struct soap *soap, char *key, char *value) { struct zkmcu__KeyValue *_p = soap_instantiate_zkmcu__KeyValue(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__KeyValue(soap, _p); _p->key = key; _p->value = value; } return _p; }

inline void soap_delete_zkmcu__KeyValue(struct soap *soap, struct zkmcu__KeyValue *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__KeyValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__delStream
#define SOAP_TYPE_zkmcu__delStream (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__delStream(struct soap*, struct zkmcu__delStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__delStream(struct soap*, const struct zkmcu__delStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__delStream(struct soap*, const char*, int, const struct zkmcu__delStream *, const char*);
SOAP_FMAC3 struct zkmcu__delStream * SOAP_FMAC4 soap_in_zkmcu__delStream(struct soap*, const char*, struct zkmcu__delStream *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__delStream(struct soap*, const struct zkmcu__delStream *, const char*, const char*);

#ifndef soap_write_zkmcu__delStream
#define soap_write_zkmcu__delStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__delStream(soap, data),0) || soap_put_zkmcu__delStream(soap, data, "zkmcu:delStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__delStream * SOAP_FMAC4 soap_get_zkmcu__delStream(struct soap*, struct zkmcu__delStream *, const char*, const char*);

#ifndef soap_read_zkmcu__delStream
#define soap_read_zkmcu__delStream(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__delStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__delStream * SOAP_FMAC2 soap_instantiate_zkmcu__delStream(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__delStream * soap_new_zkmcu__delStream(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__delStream(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__delStream * soap_new_req_zkmcu__delStream(struct soap *soap, int cid, int sourceid) { struct zkmcu__delStream *_p = soap_instantiate_zkmcu__delStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__delStream(soap, _p); _p->cid = cid; _p->sourceid = sourceid; } return _p; }

inline struct zkmcu__delStream * soap_new_set_zkmcu__delStream(struct soap *soap, int cid, int sourceid) { struct zkmcu__delStream *_p = soap_instantiate_zkmcu__delStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__delStream(soap, _p); _p->cid = cid; _p->sourceid = sourceid; } return _p; }

inline void soap_delete_zkmcu__delStream(struct soap *soap, struct zkmcu__delStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__delStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__addStream
#define SOAP_TYPE_zkmcu__addStream (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__addStream(struct soap*, struct zkmcu__addStream *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__addStream(struct soap*, const struct zkmcu__addStream *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__addStream(struct soap*, const char*, int, const struct zkmcu__addStream *, const char*);
SOAP_FMAC3 struct zkmcu__addStream * SOAP_FMAC4 soap_in_zkmcu__addStream(struct soap*, const char*, struct zkmcu__addStream *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__addStream(struct soap*, const struct zkmcu__addStream *, const char*, const char*);

#ifndef soap_write_zkmcu__addStream
#define soap_write_zkmcu__addStream(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__addStream(soap, data),0) || soap_put_zkmcu__addStream(soap, data, "zkmcu:addStream", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__addStream * SOAP_FMAC4 soap_get_zkmcu__addStream(struct soap*, struct zkmcu__addStream *, const char*, const char*);

#ifndef soap_read_zkmcu__addStream
#define soap_read_zkmcu__addStream(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__addStream(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__addStream * SOAP_FMAC2 soap_instantiate_zkmcu__addStream(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__addStream * soap_new_zkmcu__addStream(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__addStream(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__addStream * soap_new_req_zkmcu__addStream(struct soap *soap, int cid) { struct zkmcu__addStream *_p = soap_instantiate_zkmcu__addStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__addStream(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__addStream * soap_new_set_zkmcu__addStream(struct soap *soap, int cid, struct zkmcu__AddStreamRequest *req) { struct zkmcu__addStream *_p = soap_instantiate_zkmcu__addStream(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__addStream(soap, _p); _p->cid = cid; _p->req = req; } return _p; }

inline void soap_delete_zkmcu__addStream(struct soap *soap, struct zkmcu__addStream *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__addStream(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__AddStreamResponse
#define SOAP_TYPE_zkmcu__AddStreamResponse (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__AddStreamResponse(struct soap*, struct zkmcu__AddStreamResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__AddStreamResponse(struct soap*, const struct zkmcu__AddStreamResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__AddStreamResponse(struct soap*, const char*, int, const struct zkmcu__AddStreamResponse *, const char*);
SOAP_FMAC3 struct zkmcu__AddStreamResponse * SOAP_FMAC4 soap_in_zkmcu__AddStreamResponse(struct soap*, const char*, struct zkmcu__AddStreamResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__AddStreamResponse(struct soap*, const struct zkmcu__AddStreamResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__AddStreamResponse
#define soap_write_zkmcu__AddStreamResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__AddStreamResponse(soap, data),0) || soap_put_zkmcu__AddStreamResponse(soap, data, "zkmcu:AddStreamResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddStreamResponse * SOAP_FMAC4 soap_get_zkmcu__AddStreamResponse(struct soap*, struct zkmcu__AddStreamResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__AddStreamResponse
#define soap_read_zkmcu__AddStreamResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__AddStreamResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__AddStreamResponse * SOAP_FMAC2 soap_instantiate_zkmcu__AddStreamResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__AddStreamResponse * soap_new_zkmcu__AddStreamResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__AddStreamResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__AddStreamResponse * soap_new_req_zkmcu__AddStreamResponse(struct soap *soap, int streamid, struct zkmcu__MediaEndPoint& media) { struct zkmcu__AddStreamResponse *_p = soap_instantiate_zkmcu__AddStreamResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddStreamResponse(soap, _p); _p->streamid = streamid; _p->media = media; } return _p; }

inline struct zkmcu__AddStreamResponse * soap_new_set_zkmcu__AddStreamResponse(struct soap *soap, int streamid, char *reason, struct zkmcu__MediaEndPoint& media) { struct zkmcu__AddStreamResponse *_p = soap_instantiate_zkmcu__AddStreamResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddStreamResponse(soap, _p); _p->streamid = streamid; _p->reason = reason; _p->media = media; } return _p; }

inline void soap_delete_zkmcu__AddStreamResponse(struct soap *soap, struct zkmcu__AddStreamResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__AddStreamResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__AddStreamRequest
#define SOAP_TYPE_zkmcu__AddStreamRequest (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__AddStreamRequest(struct soap*, struct zkmcu__AddStreamRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__AddStreamRequest(struct soap*, const struct zkmcu__AddStreamRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__AddStreamRequest(struct soap*, const char*, int, const struct zkmcu__AddStreamRequest *, const char*);
SOAP_FMAC3 struct zkmcu__AddStreamRequest * SOAP_FMAC4 soap_in_zkmcu__AddStreamRequest(struct soap*, const char*, struct zkmcu__AddStreamRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__AddStreamRequest(struct soap*, const struct zkmcu__AddStreamRequest *, const char*, const char*);

#ifndef soap_write_zkmcu__AddStreamRequest
#define soap_write_zkmcu__AddStreamRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__AddStreamRequest(soap, data),0) || soap_put_zkmcu__AddStreamRequest(soap, data, "zkmcu:AddStreamRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddStreamRequest * SOAP_FMAC4 soap_get_zkmcu__AddStreamRequest(struct soap*, struct zkmcu__AddStreamRequest *, const char*, const char*);

#ifndef soap_read_zkmcu__AddStreamRequest
#define soap_read_zkmcu__AddStreamRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__AddStreamRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__AddStreamRequest * SOAP_FMAC2 soap_instantiate_zkmcu__AddStreamRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__AddStreamRequest * soap_new_zkmcu__AddStreamRequest(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__AddStreamRequest(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__AddStreamRequest * soap_new_req_zkmcu__AddStreamRequest(struct soap *soap, int payload) { struct zkmcu__AddStreamRequest *_p = soap_instantiate_zkmcu__AddStreamRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddStreamRequest(soap, _p); _p->payload = payload; } return _p; }

inline struct zkmcu__AddStreamRequest * soap_new_set_zkmcu__AddStreamRequest(struct soap *soap, int payload, char *desc) { struct zkmcu__AddStreamRequest *_p = soap_instantiate_zkmcu__AddStreamRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddStreamRequest(soap, _p); _p->payload = payload; _p->desc = desc; } return _p; }

inline void soap_delete_zkmcu__AddStreamRequest(struct soap *soap, struct zkmcu__AddStreamRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__AddStreamRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__delSink
#define SOAP_TYPE_zkmcu__delSink (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__delSink(struct soap*, struct zkmcu__delSink *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__delSink(struct soap*, const struct zkmcu__delSink *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__delSink(struct soap*, const char*, int, const struct zkmcu__delSink *, const char*);
SOAP_FMAC3 struct zkmcu__delSink * SOAP_FMAC4 soap_in_zkmcu__delSink(struct soap*, const char*, struct zkmcu__delSink *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__delSink(struct soap*, const struct zkmcu__delSink *, const char*, const char*);

#ifndef soap_write_zkmcu__delSink
#define soap_write_zkmcu__delSink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__delSink(soap, data),0) || soap_put_zkmcu__delSink(soap, data, "zkmcu:delSink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__delSink * SOAP_FMAC4 soap_get_zkmcu__delSink(struct soap*, struct zkmcu__delSink *, const char*, const char*);

#ifndef soap_read_zkmcu__delSink
#define soap_read_zkmcu__delSink(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__delSink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__delSink * SOAP_FMAC2 soap_instantiate_zkmcu__delSink(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__delSink * soap_new_zkmcu__delSink(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__delSink(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__delSink * soap_new_req_zkmcu__delSink(struct soap *soap, int cid, int sinkid) { struct zkmcu__delSink *_p = soap_instantiate_zkmcu__delSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__delSink(soap, _p); _p->cid = cid; _p->sinkid = sinkid; } return _p; }

inline struct zkmcu__delSink * soap_new_set_zkmcu__delSink(struct soap *soap, int cid, int sinkid) { struct zkmcu__delSink *_p = soap_instantiate_zkmcu__delSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__delSink(soap, _p); _p->cid = cid; _p->sinkid = sinkid; } return _p; }

inline void soap_delete_zkmcu__delSink(struct soap *soap, struct zkmcu__delSink *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__delSink(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__addSink
#define SOAP_TYPE_zkmcu__addSink (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__addSink(struct soap*, struct zkmcu__addSink *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__addSink(struct soap*, const struct zkmcu__addSink *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__addSink(struct soap*, const char*, int, const struct zkmcu__addSink *, const char*);
SOAP_FMAC3 struct zkmcu__addSink * SOAP_FMAC4 soap_in_zkmcu__addSink(struct soap*, const char*, struct zkmcu__addSink *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__addSink(struct soap*, const struct zkmcu__addSink *, const char*, const char*);

#ifndef soap_write_zkmcu__addSink
#define soap_write_zkmcu__addSink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__addSink(soap, data),0) || soap_put_zkmcu__addSink(soap, data, "zkmcu:addSink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__addSink * SOAP_FMAC4 soap_get_zkmcu__addSink(struct soap*, struct zkmcu__addSink *, const char*, const char*);

#ifndef soap_read_zkmcu__addSink
#define soap_read_zkmcu__addSink(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__addSink(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__addSink * SOAP_FMAC2 soap_instantiate_zkmcu__addSink(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__addSink * soap_new_zkmcu__addSink(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__addSink(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__addSink * soap_new_req_zkmcu__addSink(struct soap *soap, int cid) { struct zkmcu__addSink *_p = soap_instantiate_zkmcu__addSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__addSink(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__addSink * soap_new_set_zkmcu__addSink(struct soap *soap, int cid, struct zkmcu__AddSinkRequest *req) { struct zkmcu__addSink *_p = soap_instantiate_zkmcu__addSink(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__addSink(soap, _p); _p->cid = cid; _p->req = req; } return _p; }

inline void soap_delete_zkmcu__addSink(struct soap *soap, struct zkmcu__addSink *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__addSink(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__AddSinkResponse
#define SOAP_TYPE_zkmcu__AddSinkResponse (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__AddSinkResponse(struct soap*, struct zkmcu__AddSinkResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__AddSinkResponse(struct soap*, const struct zkmcu__AddSinkResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__AddSinkResponse(struct soap*, const char*, int, const struct zkmcu__AddSinkResponse *, const char*);
SOAP_FMAC3 struct zkmcu__AddSinkResponse * SOAP_FMAC4 soap_in_zkmcu__AddSinkResponse(struct soap*, const char*, struct zkmcu__AddSinkResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__AddSinkResponse(struct soap*, const struct zkmcu__AddSinkResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__AddSinkResponse
#define soap_write_zkmcu__AddSinkResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__AddSinkResponse(soap, data),0) || soap_put_zkmcu__AddSinkResponse(soap, data, "zkmcu:AddSinkResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddSinkResponse * SOAP_FMAC4 soap_get_zkmcu__AddSinkResponse(struct soap*, struct zkmcu__AddSinkResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__AddSinkResponse
#define soap_read_zkmcu__AddSinkResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__AddSinkResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__AddSinkResponse * SOAP_FMAC2 soap_instantiate_zkmcu__AddSinkResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__AddSinkResponse * soap_new_zkmcu__AddSinkResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__AddSinkResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__AddSinkResponse * soap_new_req_zkmcu__AddSinkResponse(struct soap *soap, int sinkid, struct zkmcu__MediaEndPoint& media) { struct zkmcu__AddSinkResponse *_p = soap_instantiate_zkmcu__AddSinkResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSinkResponse(soap, _p); _p->sinkid = sinkid; _p->media = media; } return _p; }

inline struct zkmcu__AddSinkResponse * soap_new_set_zkmcu__AddSinkResponse(struct soap *soap, int sinkid, char *reason, struct zkmcu__MediaEndPoint& media) { struct zkmcu__AddSinkResponse *_p = soap_instantiate_zkmcu__AddSinkResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSinkResponse(soap, _p); _p->sinkid = sinkid; _p->reason = reason; _p->media = media; } return _p; }

inline void soap_delete_zkmcu__AddSinkResponse(struct soap *soap, struct zkmcu__AddSinkResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__AddSinkResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__AddSinkRequest
#define SOAP_TYPE_zkmcu__AddSinkRequest (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__AddSinkRequest(struct soap*, struct zkmcu__AddSinkRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__AddSinkRequest(struct soap*, const struct zkmcu__AddSinkRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__AddSinkRequest(struct soap*, const char*, int, const struct zkmcu__AddSinkRequest *, const char*);
SOAP_FMAC3 struct zkmcu__AddSinkRequest * SOAP_FMAC4 soap_in_zkmcu__AddSinkRequest(struct soap*, const char*, struct zkmcu__AddSinkRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__AddSinkRequest(struct soap*, const struct zkmcu__AddSinkRequest *, const char*, const char*);

#ifndef soap_write_zkmcu__AddSinkRequest
#define soap_write_zkmcu__AddSinkRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__AddSinkRequest(soap, data),0) || soap_put_zkmcu__AddSinkRequest(soap, data, "zkmcu:AddSinkRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddSinkRequest * SOAP_FMAC4 soap_get_zkmcu__AddSinkRequest(struct soap*, struct zkmcu__AddSinkRequest *, const char*, const char*);

#ifndef soap_read_zkmcu__AddSinkRequest
#define soap_read_zkmcu__AddSinkRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__AddSinkRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__AddSinkRequest * SOAP_FMAC2 soap_instantiate_zkmcu__AddSinkRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__AddSinkRequest * soap_new_zkmcu__AddSinkRequest(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__AddSinkRequest(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__AddSinkRequest * soap_new_req_zkmcu__AddSinkRequest(struct soap *soap, int payload) { struct zkmcu__AddSinkRequest *_p = soap_instantiate_zkmcu__AddSinkRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSinkRequest(soap, _p); _p->payload = payload; } return _p; }

inline struct zkmcu__AddSinkRequest * soap_new_set_zkmcu__AddSinkRequest(struct soap *soap, int payload, char *desc) { struct zkmcu__AddSinkRequest *_p = soap_instantiate_zkmcu__AddSinkRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSinkRequest(soap, _p); _p->payload = payload; _p->desc = desc; } return _p; }

inline void soap_delete_zkmcu__AddSinkRequest(struct soap *soap, struct zkmcu__AddSinkRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__AddSinkRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__delSource
#define SOAP_TYPE_zkmcu__delSource (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__delSource(struct soap*, struct zkmcu__delSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__delSource(struct soap*, const struct zkmcu__delSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__delSource(struct soap*, const char*, int, const struct zkmcu__delSource *, const char*);
SOAP_FMAC3 struct zkmcu__delSource * SOAP_FMAC4 soap_in_zkmcu__delSource(struct soap*, const char*, struct zkmcu__delSource *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__delSource(struct soap*, const struct zkmcu__delSource *, const char*, const char*);

#ifndef soap_write_zkmcu__delSource
#define soap_write_zkmcu__delSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__delSource(soap, data),0) || soap_put_zkmcu__delSource(soap, data, "zkmcu:delSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__delSource * SOAP_FMAC4 soap_get_zkmcu__delSource(struct soap*, struct zkmcu__delSource *, const char*, const char*);

#ifndef soap_read_zkmcu__delSource
#define soap_read_zkmcu__delSource(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__delSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__delSource * SOAP_FMAC2 soap_instantiate_zkmcu__delSource(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__delSource * soap_new_zkmcu__delSource(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__delSource(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__delSource * soap_new_req_zkmcu__delSource(struct soap *soap, int cid, int sourceid) { struct zkmcu__delSource *_p = soap_instantiate_zkmcu__delSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__delSource(soap, _p); _p->cid = cid; _p->sourceid = sourceid; } return _p; }

inline struct zkmcu__delSource * soap_new_set_zkmcu__delSource(struct soap *soap, int cid, int sourceid) { struct zkmcu__delSource *_p = soap_instantiate_zkmcu__delSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__delSource(soap, _p); _p->cid = cid; _p->sourceid = sourceid; } return _p; }

inline void soap_delete_zkmcu__delSource(struct soap *soap, struct zkmcu__delSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__delSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__addSource
#define SOAP_TYPE_zkmcu__addSource (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__addSource(struct soap*, struct zkmcu__addSource *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__addSource(struct soap*, const struct zkmcu__addSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__addSource(struct soap*, const char*, int, const struct zkmcu__addSource *, const char*);
SOAP_FMAC3 struct zkmcu__addSource * SOAP_FMAC4 soap_in_zkmcu__addSource(struct soap*, const char*, struct zkmcu__addSource *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__addSource(struct soap*, const struct zkmcu__addSource *, const char*, const char*);

#ifndef soap_write_zkmcu__addSource
#define soap_write_zkmcu__addSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__addSource(soap, data),0) || soap_put_zkmcu__addSource(soap, data, "zkmcu:addSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__addSource * SOAP_FMAC4 soap_get_zkmcu__addSource(struct soap*, struct zkmcu__addSource *, const char*, const char*);

#ifndef soap_read_zkmcu__addSource
#define soap_read_zkmcu__addSource(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__addSource(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__addSource * SOAP_FMAC2 soap_instantiate_zkmcu__addSource(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__addSource * soap_new_zkmcu__addSource(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__addSource(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__addSource * soap_new_req_zkmcu__addSource(struct soap *soap, int cid) { struct zkmcu__addSource *_p = soap_instantiate_zkmcu__addSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__addSource(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__addSource * soap_new_set_zkmcu__addSource(struct soap *soap, int cid, struct zkmcu__AddSourceRequest *req) { struct zkmcu__addSource *_p = soap_instantiate_zkmcu__addSource(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__addSource(soap, _p); _p->cid = cid; _p->req = req; } return _p; }

inline void soap_delete_zkmcu__addSource(struct soap *soap, struct zkmcu__addSource *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__addSource(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__AddSourceResponse
#define SOAP_TYPE_zkmcu__AddSourceResponse (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__AddSourceResponse(struct soap*, struct zkmcu__AddSourceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__AddSourceResponse(struct soap*, const struct zkmcu__AddSourceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__AddSourceResponse(struct soap*, const char*, int, const struct zkmcu__AddSourceResponse *, const char*);
SOAP_FMAC3 struct zkmcu__AddSourceResponse * SOAP_FMAC4 soap_in_zkmcu__AddSourceResponse(struct soap*, const char*, struct zkmcu__AddSourceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__AddSourceResponse(struct soap*, const struct zkmcu__AddSourceResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__AddSourceResponse
#define soap_write_zkmcu__AddSourceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__AddSourceResponse(soap, data),0) || soap_put_zkmcu__AddSourceResponse(soap, data, "zkmcu:AddSourceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddSourceResponse * SOAP_FMAC4 soap_get_zkmcu__AddSourceResponse(struct soap*, struct zkmcu__AddSourceResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__AddSourceResponse
#define soap_read_zkmcu__AddSourceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__AddSourceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__AddSourceResponse * SOAP_FMAC2 soap_instantiate_zkmcu__AddSourceResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__AddSourceResponse * soap_new_zkmcu__AddSourceResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__AddSourceResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__AddSourceResponse * soap_new_req_zkmcu__AddSourceResponse(struct soap *soap, int sourceid, struct zkmcu__MediaEndPoint& media) { struct zkmcu__AddSourceResponse *_p = soap_instantiate_zkmcu__AddSourceResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSourceResponse(soap, _p); _p->sourceid = sourceid; _p->media = media; } return _p; }

inline struct zkmcu__AddSourceResponse * soap_new_set_zkmcu__AddSourceResponse(struct soap *soap, int sourceid, char *reason, struct zkmcu__MediaEndPoint& media) { struct zkmcu__AddSourceResponse *_p = soap_instantiate_zkmcu__AddSourceResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSourceResponse(soap, _p); _p->sourceid = sourceid; _p->reason = reason; _p->media = media; } return _p; }

inline void soap_delete_zkmcu__AddSourceResponse(struct soap *soap, struct zkmcu__AddSourceResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__AddSourceResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__AddSourceRequest
#define SOAP_TYPE_zkmcu__AddSourceRequest (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__AddSourceRequest(struct soap*, struct zkmcu__AddSourceRequest *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__AddSourceRequest(struct soap*, const struct zkmcu__AddSourceRequest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__AddSourceRequest(struct soap*, const char*, int, const struct zkmcu__AddSourceRequest *, const char*);
SOAP_FMAC3 struct zkmcu__AddSourceRequest * SOAP_FMAC4 soap_in_zkmcu__AddSourceRequest(struct soap*, const char*, struct zkmcu__AddSourceRequest *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__AddSourceRequest(struct soap*, const struct zkmcu__AddSourceRequest *, const char*, const char*);

#ifndef soap_write_zkmcu__AddSourceRequest
#define soap_write_zkmcu__AddSourceRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__AddSourceRequest(soap, data),0) || soap_put_zkmcu__AddSourceRequest(soap, data, "zkmcu:AddSourceRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddSourceRequest * SOAP_FMAC4 soap_get_zkmcu__AddSourceRequest(struct soap*, struct zkmcu__AddSourceRequest *, const char*, const char*);

#ifndef soap_read_zkmcu__AddSourceRequest
#define soap_read_zkmcu__AddSourceRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__AddSourceRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__AddSourceRequest * SOAP_FMAC2 soap_instantiate_zkmcu__AddSourceRequest(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__AddSourceRequest * soap_new_zkmcu__AddSourceRequest(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__AddSourceRequest(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__AddSourceRequest * soap_new_req_zkmcu__AddSourceRequest(struct soap *soap, int payload) { struct zkmcu__AddSourceRequest *_p = soap_instantiate_zkmcu__AddSourceRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSourceRequest(soap, _p); _p->payload = payload; } return _p; }

inline struct zkmcu__AddSourceRequest * soap_new_set_zkmcu__AddSourceRequest(struct soap *soap, int payload, char *desc) { struct zkmcu__AddSourceRequest *_p = soap_instantiate_zkmcu__AddSourceRequest(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__AddSourceRequest(soap, _p); _p->payload = payload; _p->desc = desc; } return _p; }

inline void soap_delete_zkmcu__AddSourceRequest(struct soap *soap, struct zkmcu__AddSourceRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__AddSourceRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__MediaEndPoint
#define SOAP_TYPE_zkmcu__MediaEndPoint (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__MediaEndPoint(struct soap*, struct zkmcu__MediaEndPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__MediaEndPoint(struct soap*, const struct zkmcu__MediaEndPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__MediaEndPoint(struct soap*, const char*, int, const struct zkmcu__MediaEndPoint *, const char*);
SOAP_FMAC3 struct zkmcu__MediaEndPoint * SOAP_FMAC4 soap_in_zkmcu__MediaEndPoint(struct soap*, const char*, struct zkmcu__MediaEndPoint *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__MediaEndPoint(struct soap*, const struct zkmcu__MediaEndPoint *, const char*, const char*);

#ifndef soap_write_zkmcu__MediaEndPoint
#define soap_write_zkmcu__MediaEndPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__MediaEndPoint(soap, data),0) || soap_put_zkmcu__MediaEndPoint(soap, data, "zkmcu:MediaEndPoint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__MediaEndPoint * SOAP_FMAC4 soap_get_zkmcu__MediaEndPoint(struct soap*, struct zkmcu__MediaEndPoint *, const char*, const char*);

#ifndef soap_read_zkmcu__MediaEndPoint
#define soap_read_zkmcu__MediaEndPoint(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__MediaEndPoint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__MediaEndPoint * SOAP_FMAC2 soap_instantiate_zkmcu__MediaEndPoint(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__MediaEndPoint * soap_new_zkmcu__MediaEndPoint(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__MediaEndPoint(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__MediaEndPoint * soap_new_req_zkmcu__MediaEndPoint(struct soap *soap, int rtp_USCOREport, int rtcp_USCOREport) { struct zkmcu__MediaEndPoint *_p = soap_instantiate_zkmcu__MediaEndPoint(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__MediaEndPoint(soap, _p); _p->rtp_USCOREport = rtp_USCOREport; _p->rtcp_USCOREport = rtcp_USCOREport; } return _p; }

inline struct zkmcu__MediaEndPoint * soap_new_set_zkmcu__MediaEndPoint(struct soap *soap, int rtp_USCOREport, int rtcp_USCOREport, char *server_USCOREip) { struct zkmcu__MediaEndPoint *_p = soap_instantiate_zkmcu__MediaEndPoint(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__MediaEndPoint(soap, _p); _p->rtp_USCOREport = rtp_USCOREport; _p->rtcp_USCOREport = rtcp_USCOREport; _p->server_USCOREip = server_USCOREip; } return _p; }

inline void soap_delete_zkmcu__MediaEndPoint(struct soap *soap, struct zkmcu__MediaEndPoint *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__MediaEndPoint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__infoConference
#define SOAP_TYPE_zkmcu__infoConference (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__infoConference(struct soap*, struct zkmcu__infoConference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__infoConference(struct soap*, const struct zkmcu__infoConference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__infoConference(struct soap*, const char*, int, const struct zkmcu__infoConference *, const char*);
SOAP_FMAC3 struct zkmcu__infoConference * SOAP_FMAC4 soap_in_zkmcu__infoConference(struct soap*, const char*, struct zkmcu__infoConference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__infoConference(struct soap*, const struct zkmcu__infoConference *, const char*, const char*);

#ifndef soap_write_zkmcu__infoConference
#define soap_write_zkmcu__infoConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__infoConference(soap, data),0) || soap_put_zkmcu__infoConference(soap, data, "zkmcu:infoConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__infoConference * SOAP_FMAC4 soap_get_zkmcu__infoConference(struct soap*, struct zkmcu__infoConference *, const char*, const char*);

#ifndef soap_read_zkmcu__infoConference
#define soap_read_zkmcu__infoConference(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__infoConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__infoConference * SOAP_FMAC2 soap_instantiate_zkmcu__infoConference(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__infoConference * soap_new_zkmcu__infoConference(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__infoConference(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__infoConference * soap_new_req_zkmcu__infoConference(struct soap *soap, int cid) { struct zkmcu__infoConference *_p = soap_instantiate_zkmcu__infoConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__infoConference(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__infoConference * soap_new_set_zkmcu__infoConference(struct soap *soap, int cid) { struct zkmcu__infoConference *_p = soap_instantiate_zkmcu__infoConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__infoConference(soap, _p); _p->cid = cid; } return _p; }

inline void soap_delete_zkmcu__infoConference(struct soap *soap, struct zkmcu__infoConference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__infoConference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__ConferenceInfoResponse
#define SOAP_TYPE_zkmcu__ConferenceInfoResponse (48)
#endif

#define soap_default_zkmcu__ConferenceInfoResponse(soap, a) soap_default_zkmcu__ConferenceInfo(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__ConferenceInfoResponse(struct soap*, const struct zkmcu__ConferenceInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__ConferenceInfoResponse(struct soap*, const char*, int, const struct zkmcu__ConferenceInfo *, const char*);
SOAP_FMAC3 struct zkmcu__ConferenceInfo * SOAP_FMAC4 soap_in_zkmcu__ConferenceInfoResponse(struct soap*, const char*, struct zkmcu__ConferenceInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__ConferenceInfoResponse(struct soap*, const struct zkmcu__ConferenceInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__ConferenceInfoResponse
#define soap_write_zkmcu__ConferenceInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__ConferenceInfoResponse(soap, data),0) || soap_put_zkmcu__ConferenceInfoResponse(soap, data, "zkmcu:ConferenceInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__ConferenceInfo * SOAP_FMAC4 soap_get_zkmcu__ConferenceInfoResponse(struct soap*, struct zkmcu__ConferenceInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__ConferenceInfoResponse
#define soap_read_zkmcu__ConferenceInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__ConferenceInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_zkmcu__ConferenceInfoResponse soap_instantiate_zkmcu__ConferenceInfo


#define soap_copy_zkmcu__ConferenceInfoResponse soap_copy_zkmcu__ConferenceInfo

#ifndef SOAP_TYPE_zkmcu__ConferenceInfo
#define SOAP_TYPE_zkmcu__ConferenceInfo (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__ConferenceInfo(struct soap*, struct zkmcu__ConferenceInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__ConferenceInfo(struct soap*, const struct zkmcu__ConferenceInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__ConferenceInfo(struct soap*, const char*, int, const struct zkmcu__ConferenceInfo *, const char*);
SOAP_FMAC3 struct zkmcu__ConferenceInfo * SOAP_FMAC4 soap_in_zkmcu__ConferenceInfo(struct soap*, const char*, struct zkmcu__ConferenceInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__ConferenceInfo(struct soap*, const struct zkmcu__ConferenceInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__ConferenceInfo
#define soap_write_zkmcu__ConferenceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__ConferenceInfo(soap, data),0) || soap_put_zkmcu__ConferenceInfo(soap, data, "zkmcu:ConferenceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__ConferenceInfo * SOAP_FMAC4 soap_get_zkmcu__ConferenceInfo(struct soap*, struct zkmcu__ConferenceInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__ConferenceInfo
#define soap_read_zkmcu__ConferenceInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__ConferenceInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__ConferenceInfo * SOAP_FMAC2 soap_instantiate_zkmcu__ConferenceInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__ConferenceInfo * soap_new_zkmcu__ConferenceInfo(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__ConferenceInfo(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__ConferenceInfo * soap_new_req_zkmcu__ConferenceInfo(struct soap *soap, int cid, int mode, double uptime) { struct zkmcu__ConferenceInfo *_p = soap_instantiate_zkmcu__ConferenceInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__ConferenceInfo(soap, _p); _p->cid = cid; _p->mode = mode; _p->uptime = uptime; } return _p; }

inline struct zkmcu__ConferenceInfo * soap_new_set_zkmcu__ConferenceInfo(struct soap *soap, int cid, int mode, double uptime, char *desc, struct zkmcu__StreamInfoArray *streams, struct zkmcu__SourceInfoArray *sources, struct zkmcu__SinkInfoArray *sinks) { struct zkmcu__ConferenceInfo *_p = soap_instantiate_zkmcu__ConferenceInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__ConferenceInfo(soap, _p); _p->cid = cid; _p->mode = mode; _p->uptime = uptime; _p->desc = desc; _p->streams = streams; _p->sources = sources; _p->sinks = sinks; } return _p; }

inline void soap_delete_zkmcu__ConferenceInfo(struct soap *soap, struct zkmcu__ConferenceInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__ConferenceInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__SinkInfoArray
#define SOAP_TYPE_zkmcu__SinkInfoArray (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__SinkInfoArray(struct soap*, struct zkmcu__SinkInfoArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__SinkInfoArray(struct soap*, struct zkmcu__SinkInfoArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__SinkInfoArray(struct soap*, const char*, int, const struct zkmcu__SinkInfoArray *, const char*);
SOAP_FMAC3 struct zkmcu__SinkInfoArray * SOAP_FMAC4 soap_in_zkmcu__SinkInfoArray(struct soap*, const char*, struct zkmcu__SinkInfoArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__SinkInfoArray(struct soap*, const struct zkmcu__SinkInfoArray *, const char*, const char*);

#ifndef soap_write_zkmcu__SinkInfoArray
#define soap_write_zkmcu__SinkInfoArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__SinkInfoArray(soap, data),0) || soap_put_zkmcu__SinkInfoArray(soap, data, "zkmcu:SinkInfoArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SinkInfoArray * SOAP_FMAC4 soap_get_zkmcu__SinkInfoArray(struct soap*, struct zkmcu__SinkInfoArray *, const char*, const char*);

#ifndef soap_read_zkmcu__SinkInfoArray
#define soap_read_zkmcu__SinkInfoArray(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__SinkInfoArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__SinkInfoArray * SOAP_FMAC2 soap_instantiate_zkmcu__SinkInfoArray(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__SinkInfoArray * soap_new_zkmcu__SinkInfoArray(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__SinkInfoArray(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__SinkInfoArray * soap_new_req_zkmcu__SinkInfoArray(struct soap *soap) { struct zkmcu__SinkInfoArray *_p = soap_instantiate_zkmcu__SinkInfoArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SinkInfoArray(soap, _p); } return _p; }

inline struct zkmcu__SinkInfoArray * soap_new_set_zkmcu__SinkInfoArray(struct soap *soap, struct zkmcu__SinkInfo *__ptr, int __size) { struct zkmcu__SinkInfoArray *_p = soap_instantiate_zkmcu__SinkInfoArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SinkInfoArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_zkmcu__SinkInfoArray(struct soap *soap, struct zkmcu__SinkInfoArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__SinkInfoArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__SinkInfo
#define SOAP_TYPE_zkmcu__SinkInfo (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__SinkInfo(struct soap*, struct zkmcu__SinkInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__SinkInfo(struct soap*, const struct zkmcu__SinkInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__SinkInfo(struct soap*, const char*, int, const struct zkmcu__SinkInfo *, const char*);
SOAP_FMAC3 struct zkmcu__SinkInfo * SOAP_FMAC4 soap_in_zkmcu__SinkInfo(struct soap*, const char*, struct zkmcu__SinkInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__SinkInfo(struct soap*, const struct zkmcu__SinkInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__SinkInfo
#define soap_write_zkmcu__SinkInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__SinkInfo(soap, data),0) || soap_put_zkmcu__SinkInfo(soap, data, "zkmcu:SinkInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SinkInfo * SOAP_FMAC4 soap_get_zkmcu__SinkInfo(struct soap*, struct zkmcu__SinkInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__SinkInfo
#define soap_read_zkmcu__SinkInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__SinkInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__SinkInfo * SOAP_FMAC2 soap_instantiate_zkmcu__SinkInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__SinkInfo * soap_new_zkmcu__SinkInfo(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__SinkInfo(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__SinkInfo * soap_new_req_zkmcu__SinkInfo(struct soap *soap, int sinkid, long sent, long lost, int jitter) { struct zkmcu__SinkInfo *_p = soap_instantiate_zkmcu__SinkInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SinkInfo(soap, _p); _p->sinkid = sinkid; _p->sent = sent; _p->lost = lost; _p->jitter = jitter; } return _p; }

inline struct zkmcu__SinkInfo * soap_new_set_zkmcu__SinkInfo(struct soap *soap, int sinkid, char *desc, long sent, long lost, int jitter) { struct zkmcu__SinkInfo *_p = soap_instantiate_zkmcu__SinkInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SinkInfo(soap, _p); _p->sinkid = sinkid; _p->desc = desc; _p->sent = sent; _p->lost = lost; _p->jitter = jitter; } return _p; }

inline void soap_delete_zkmcu__SinkInfo(struct soap *soap, struct zkmcu__SinkInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__SinkInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__SourceInfoArray
#define SOAP_TYPE_zkmcu__SourceInfoArray (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__SourceInfoArray(struct soap*, struct zkmcu__SourceInfoArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__SourceInfoArray(struct soap*, struct zkmcu__SourceInfoArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__SourceInfoArray(struct soap*, const char*, int, const struct zkmcu__SourceInfoArray *, const char*);
SOAP_FMAC3 struct zkmcu__SourceInfoArray * SOAP_FMAC4 soap_in_zkmcu__SourceInfoArray(struct soap*, const char*, struct zkmcu__SourceInfoArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__SourceInfoArray(struct soap*, const struct zkmcu__SourceInfoArray *, const char*, const char*);

#ifndef soap_write_zkmcu__SourceInfoArray
#define soap_write_zkmcu__SourceInfoArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__SourceInfoArray(soap, data),0) || soap_put_zkmcu__SourceInfoArray(soap, data, "zkmcu:SourceInfoArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SourceInfoArray * SOAP_FMAC4 soap_get_zkmcu__SourceInfoArray(struct soap*, struct zkmcu__SourceInfoArray *, const char*, const char*);

#ifndef soap_read_zkmcu__SourceInfoArray
#define soap_read_zkmcu__SourceInfoArray(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__SourceInfoArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__SourceInfoArray * SOAP_FMAC2 soap_instantiate_zkmcu__SourceInfoArray(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__SourceInfoArray * soap_new_zkmcu__SourceInfoArray(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__SourceInfoArray(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__SourceInfoArray * soap_new_req_zkmcu__SourceInfoArray(struct soap *soap) { struct zkmcu__SourceInfoArray *_p = soap_instantiate_zkmcu__SourceInfoArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SourceInfoArray(soap, _p); } return _p; }

inline struct zkmcu__SourceInfoArray * soap_new_set_zkmcu__SourceInfoArray(struct soap *soap, struct zkmcu__SourceInfo *__ptr, int __size) { struct zkmcu__SourceInfoArray *_p = soap_instantiate_zkmcu__SourceInfoArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SourceInfoArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_zkmcu__SourceInfoArray(struct soap *soap, struct zkmcu__SourceInfoArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__SourceInfoArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__SourceInfo
#define SOAP_TYPE_zkmcu__SourceInfo (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__SourceInfo(struct soap*, struct zkmcu__SourceInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__SourceInfo(struct soap*, const struct zkmcu__SourceInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__SourceInfo(struct soap*, const char*, int, const struct zkmcu__SourceInfo *, const char*);
SOAP_FMAC3 struct zkmcu__SourceInfo * SOAP_FMAC4 soap_in_zkmcu__SourceInfo(struct soap*, const char*, struct zkmcu__SourceInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__SourceInfo(struct soap*, const struct zkmcu__SourceInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__SourceInfo
#define soap_write_zkmcu__SourceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__SourceInfo(soap, data),0) || soap_put_zkmcu__SourceInfo(soap, data, "zkmcu:SourceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SourceInfo * SOAP_FMAC4 soap_get_zkmcu__SourceInfo(struct soap*, struct zkmcu__SourceInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__SourceInfo
#define soap_read_zkmcu__SourceInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__SourceInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__SourceInfo * SOAP_FMAC2 soap_instantiate_zkmcu__SourceInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__SourceInfo * soap_new_zkmcu__SourceInfo(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__SourceInfo(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__SourceInfo * soap_new_req_zkmcu__SourceInfo(struct soap *soap, int sourceid, long lost, long recv) { struct zkmcu__SourceInfo *_p = soap_instantiate_zkmcu__SourceInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SourceInfo(soap, _p); _p->sourceid = sourceid; _p->lost = lost; _p->recv = recv; } return _p; }

inline struct zkmcu__SourceInfo * soap_new_set_zkmcu__SourceInfo(struct soap *soap, int sourceid, char *desc, long lost, long recv) { struct zkmcu__SourceInfo *_p = soap_instantiate_zkmcu__SourceInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SourceInfo(soap, _p); _p->sourceid = sourceid; _p->desc = desc; _p->lost = lost; _p->recv = recv; } return _p; }

inline void soap_delete_zkmcu__SourceInfo(struct soap *soap, struct zkmcu__SourceInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__SourceInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__StreamInfoArray
#define SOAP_TYPE_zkmcu__StreamInfoArray (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__StreamInfoArray(struct soap*, struct zkmcu__StreamInfoArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__StreamInfoArray(struct soap*, struct zkmcu__StreamInfoArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__StreamInfoArray(struct soap*, const char*, int, const struct zkmcu__StreamInfoArray *, const char*);
SOAP_FMAC3 struct zkmcu__StreamInfoArray * SOAP_FMAC4 soap_in_zkmcu__StreamInfoArray(struct soap*, const char*, struct zkmcu__StreamInfoArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__StreamInfoArray(struct soap*, const struct zkmcu__StreamInfoArray *, const char*, const char*);

#ifndef soap_write_zkmcu__StreamInfoArray
#define soap_write_zkmcu__StreamInfoArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__StreamInfoArray(soap, data),0) || soap_put_zkmcu__StreamInfoArray(soap, data, "zkmcu:StreamInfoArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__StreamInfoArray * SOAP_FMAC4 soap_get_zkmcu__StreamInfoArray(struct soap*, struct zkmcu__StreamInfoArray *, const char*, const char*);

#ifndef soap_read_zkmcu__StreamInfoArray
#define soap_read_zkmcu__StreamInfoArray(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__StreamInfoArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__StreamInfoArray * SOAP_FMAC2 soap_instantiate_zkmcu__StreamInfoArray(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__StreamInfoArray * soap_new_zkmcu__StreamInfoArray(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__StreamInfoArray(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__StreamInfoArray * soap_new_req_zkmcu__StreamInfoArray(struct soap *soap) { struct zkmcu__StreamInfoArray *_p = soap_instantiate_zkmcu__StreamInfoArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__StreamInfoArray(soap, _p); } return _p; }

inline struct zkmcu__StreamInfoArray * soap_new_set_zkmcu__StreamInfoArray(struct soap *soap, struct zkmcu__StreamInfo *__ptr, int __size) { struct zkmcu__StreamInfoArray *_p = soap_instantiate_zkmcu__StreamInfoArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__StreamInfoArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_zkmcu__StreamInfoArray(struct soap *soap, struct zkmcu__StreamInfoArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__StreamInfoArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__StreamInfo
#define SOAP_TYPE_zkmcu__StreamInfo (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__StreamInfo(struct soap*, struct zkmcu__StreamInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__StreamInfo(struct soap*, const struct zkmcu__StreamInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__StreamInfo(struct soap*, const char*, int, const struct zkmcu__StreamInfo *, const char*);
SOAP_FMAC3 struct zkmcu__StreamInfo * SOAP_FMAC4 soap_in_zkmcu__StreamInfo(struct soap*, const char*, struct zkmcu__StreamInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__StreamInfo(struct soap*, const struct zkmcu__StreamInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__StreamInfo
#define soap_write_zkmcu__StreamInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__StreamInfo(soap, data),0) || soap_put_zkmcu__StreamInfo(soap, data, "zkmcu:StreamInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__StreamInfo * SOAP_FMAC4 soap_get_zkmcu__StreamInfo(struct soap*, struct zkmcu__StreamInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__StreamInfo
#define soap_read_zkmcu__StreamInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__StreamInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__StreamInfo * SOAP_FMAC2 soap_instantiate_zkmcu__StreamInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__StreamInfo * soap_new_zkmcu__StreamInfo(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__StreamInfo(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__StreamInfo * soap_new_req_zkmcu__StreamInfo(struct soap *soap, int streamid, long sent, long recv, long lost_USCOREsent, long lost_USCORErecv, int jitter) { struct zkmcu__StreamInfo *_p = soap_instantiate_zkmcu__StreamInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__StreamInfo(soap, _p); _p->streamid = streamid; _p->sent = sent; _p->recv = recv; _p->lost_USCOREsent = lost_USCOREsent; _p->lost_USCORErecv = lost_USCORErecv; _p->jitter = jitter; } return _p; }

inline struct zkmcu__StreamInfo * soap_new_set_zkmcu__StreamInfo(struct soap *soap, int streamid, char *desc, long sent, long recv, long lost_USCOREsent, long lost_USCORErecv, int jitter) { struct zkmcu__StreamInfo *_p = soap_instantiate_zkmcu__StreamInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__StreamInfo(soap, _p); _p->streamid = streamid; _p->desc = desc; _p->sent = sent; _p->recv = recv; _p->lost_USCOREsent = lost_USCOREsent; _p->lost_USCORErecv = lost_USCORErecv; _p->jitter = jitter; } return _p; }

inline void soap_delete_zkmcu__StreamInfo(struct soap *soap, struct zkmcu__StreamInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__StreamInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__listConferences
#define SOAP_TYPE_zkmcu__listConferences (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__listConferences(struct soap*, struct zkmcu__listConferences *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__listConferences(struct soap*, const struct zkmcu__listConferences *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__listConferences(struct soap*, const char*, int, const struct zkmcu__listConferences *, const char*);
SOAP_FMAC3 struct zkmcu__listConferences * SOAP_FMAC4 soap_in_zkmcu__listConferences(struct soap*, const char*, struct zkmcu__listConferences *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__listConferences(struct soap*, const struct zkmcu__listConferences *, const char*, const char*);

#ifndef soap_write_zkmcu__listConferences
#define soap_write_zkmcu__listConferences(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__listConferences(soap, data),0) || soap_put_zkmcu__listConferences(soap, data, "zkmcu:listConferences", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__listConferences * SOAP_FMAC4 soap_get_zkmcu__listConferences(struct soap*, struct zkmcu__listConferences *, const char*, const char*);

#ifndef soap_read_zkmcu__listConferences
#define soap_read_zkmcu__listConferences(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__listConferences(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__listConferences * SOAP_FMAC2 soap_instantiate_zkmcu__listConferences(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__listConferences * soap_new_zkmcu__listConferences(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__listConferences(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__listConferences * soap_new_req_zkmcu__listConferences(struct soap *soap) { struct zkmcu__listConferences *_p = soap_instantiate_zkmcu__listConferences(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__listConferences(soap, _p); } return _p; }

inline struct zkmcu__listConferences * soap_new_set_zkmcu__listConferences(struct soap *soap, void *_param_4) { struct zkmcu__listConferences *_p = soap_instantiate_zkmcu__listConferences(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__listConferences(soap, _p); _p->_param_4 = _param_4; } return _p; }

inline void soap_delete_zkmcu__listConferences(struct soap *soap, struct zkmcu__listConferences *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__listConferences(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__listConferencesResponse
#define SOAP_TYPE_zkmcu__listConferencesResponse (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__listConferencesResponse(struct soap*, struct zkmcu__listConferencesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__listConferencesResponse(struct soap*, const struct zkmcu__listConferencesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__listConferencesResponse(struct soap*, const char*, int, const struct zkmcu__listConferencesResponse *, const char*);
SOAP_FMAC3 struct zkmcu__listConferencesResponse * SOAP_FMAC4 soap_in_zkmcu__listConferencesResponse(struct soap*, const char*, struct zkmcu__listConferencesResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__listConferencesResponse(struct soap*, const struct zkmcu__listConferencesResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__listConferencesResponse
#define soap_write_zkmcu__listConferencesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__listConferencesResponse(soap, data),0) || soap_put_zkmcu__listConferencesResponse(soap, data, "zkmcu:listConferencesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__listConferencesResponse * SOAP_FMAC4 soap_get_zkmcu__listConferencesResponse(struct soap*, struct zkmcu__listConferencesResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__listConferencesResponse
#define soap_read_zkmcu__listConferencesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__listConferencesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__listConferencesResponse * SOAP_FMAC2 soap_instantiate_zkmcu__listConferencesResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__listConferencesResponse * soap_new_zkmcu__listConferencesResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__listConferencesResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__listConferencesResponse * soap_new_req_zkmcu__listConferencesResponse(struct soap *soap, struct zkmcu__ConferenceIdArray& res) { struct zkmcu__listConferencesResponse *_p = soap_instantiate_zkmcu__listConferencesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__listConferencesResponse(soap, _p); _p->res = res; } return _p; }

inline struct zkmcu__listConferencesResponse * soap_new_set_zkmcu__listConferencesResponse(struct soap *soap, struct zkmcu__ConferenceIdArray& res) { struct zkmcu__listConferencesResponse *_p = soap_instantiate_zkmcu__listConferencesResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__listConferencesResponse(soap, _p); _p->res = res; } return _p; }

inline void soap_delete_zkmcu__listConferencesResponse(struct soap *soap, struct zkmcu__listConferencesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__listConferencesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__ConferenceIdArrayResponse
#define SOAP_TYPE_zkmcu__ConferenceIdArrayResponse (29)
#endif

#define soap_default_zkmcu__ConferenceIdArrayResponse(soap, a) soap_default_zkmcu__ConferenceIdArray(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__ConferenceIdArrayResponse(struct soap*, struct zkmcu__ConferenceIdArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__ConferenceIdArrayResponse(struct soap*, const char*, int, const struct zkmcu__ConferenceIdArray *, const char*);
SOAP_FMAC3 struct zkmcu__ConferenceIdArray * SOAP_FMAC4 soap_in_zkmcu__ConferenceIdArrayResponse(struct soap*, const char*, struct zkmcu__ConferenceIdArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__ConferenceIdArrayResponse(struct soap*, const struct zkmcu__ConferenceIdArray *, const char*, const char*);

#ifndef soap_write_zkmcu__ConferenceIdArrayResponse
#define soap_write_zkmcu__ConferenceIdArrayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__ConferenceIdArrayResponse(soap, data),0) || soap_put_zkmcu__ConferenceIdArrayResponse(soap, data, "zkmcu:ConferenceIdArrayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__ConferenceIdArray * SOAP_FMAC4 soap_get_zkmcu__ConferenceIdArrayResponse(struct soap*, struct zkmcu__ConferenceIdArray *, const char*, const char*);

#ifndef soap_read_zkmcu__ConferenceIdArrayResponse
#define soap_read_zkmcu__ConferenceIdArrayResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__ConferenceIdArrayResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_zkmcu__ConferenceIdArrayResponse soap_instantiate_zkmcu__ConferenceIdArray


#define soap_copy_zkmcu__ConferenceIdArrayResponse soap_copy_zkmcu__ConferenceIdArray

#ifndef SOAP_TYPE_zkmcu__ConferenceIdArray
#define SOAP_TYPE_zkmcu__ConferenceIdArray (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__ConferenceIdArray(struct soap*, struct zkmcu__ConferenceIdArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__ConferenceIdArray(struct soap*, struct zkmcu__ConferenceIdArray const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__ConferenceIdArray(struct soap*, const char*, int, const struct zkmcu__ConferenceIdArray *, const char*);
SOAP_FMAC3 struct zkmcu__ConferenceIdArray * SOAP_FMAC4 soap_in_zkmcu__ConferenceIdArray(struct soap*, const char*, struct zkmcu__ConferenceIdArray *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__ConferenceIdArray(struct soap*, const struct zkmcu__ConferenceIdArray *, const char*, const char*);

#ifndef soap_write_zkmcu__ConferenceIdArray
#define soap_write_zkmcu__ConferenceIdArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__ConferenceIdArray(soap, data),0) || soap_put_zkmcu__ConferenceIdArray(soap, data, "zkmcu:ConferenceIdArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__ConferenceIdArray * SOAP_FMAC4 soap_get_zkmcu__ConferenceIdArray(struct soap*, struct zkmcu__ConferenceIdArray *, const char*, const char*);

#ifndef soap_read_zkmcu__ConferenceIdArray
#define soap_read_zkmcu__ConferenceIdArray(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__ConferenceIdArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__ConferenceIdArray * SOAP_FMAC2 soap_instantiate_zkmcu__ConferenceIdArray(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__ConferenceIdArray * soap_new_zkmcu__ConferenceIdArray(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__ConferenceIdArray(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__ConferenceIdArray * soap_new_req_zkmcu__ConferenceIdArray(struct soap *soap) { struct zkmcu__ConferenceIdArray *_p = soap_instantiate_zkmcu__ConferenceIdArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__ConferenceIdArray(soap, _p); } return _p; }

inline struct zkmcu__ConferenceIdArray * soap_new_set_zkmcu__ConferenceIdArray(struct soap *soap, int *__ptr, int __size) { struct zkmcu__ConferenceIdArray *_p = soap_instantiate_zkmcu__ConferenceIdArray(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__ConferenceIdArray(soap, _p); _p->__ptr = __ptr; _p->__size = __size; } return _p; }

inline void soap_delete_zkmcu__ConferenceIdArray(struct soap *soap, struct zkmcu__ConferenceIdArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__ConferenceIdArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__destroyConference
#define SOAP_TYPE_zkmcu__destroyConference (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__destroyConference(struct soap*, struct zkmcu__destroyConference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__destroyConference(struct soap*, const struct zkmcu__destroyConference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__destroyConference(struct soap*, const char*, int, const struct zkmcu__destroyConference *, const char*);
SOAP_FMAC3 struct zkmcu__destroyConference * SOAP_FMAC4 soap_in_zkmcu__destroyConference(struct soap*, const char*, struct zkmcu__destroyConference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__destroyConference(struct soap*, const struct zkmcu__destroyConference *, const char*, const char*);

#ifndef soap_write_zkmcu__destroyConference
#define soap_write_zkmcu__destroyConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__destroyConference(soap, data),0) || soap_put_zkmcu__destroyConference(soap, data, "zkmcu:destroyConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__destroyConference * SOAP_FMAC4 soap_get_zkmcu__destroyConference(struct soap*, struct zkmcu__destroyConference *, const char*, const char*);

#ifndef soap_read_zkmcu__destroyConference
#define soap_read_zkmcu__destroyConference(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__destroyConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__destroyConference * SOAP_FMAC2 soap_instantiate_zkmcu__destroyConference(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__destroyConference * soap_new_zkmcu__destroyConference(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__destroyConference(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__destroyConference * soap_new_req_zkmcu__destroyConference(struct soap *soap, int cid) { struct zkmcu__destroyConference *_p = soap_instantiate_zkmcu__destroyConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__destroyConference(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__destroyConference * soap_new_set_zkmcu__destroyConference(struct soap *soap, int cid) { struct zkmcu__destroyConference *_p = soap_instantiate_zkmcu__destroyConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__destroyConference(soap, _p); _p->cid = cid; } return _p; }

inline void soap_delete_zkmcu__destroyConference(struct soap *soap, struct zkmcu__destroyConference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__destroyConference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__createConference
#define SOAP_TYPE_zkmcu__createConference (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__createConference(struct soap*, struct zkmcu__createConference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__createConference(struct soap*, const struct zkmcu__createConference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__createConference(struct soap*, const char*, int, const struct zkmcu__createConference *, const char*);
SOAP_FMAC3 struct zkmcu__createConference * SOAP_FMAC4 soap_in_zkmcu__createConference(struct soap*, const char*, struct zkmcu__createConference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__createConference(struct soap*, const struct zkmcu__createConference *, const char*, const char*);

#ifndef soap_write_zkmcu__createConference
#define soap_write_zkmcu__createConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__createConference(soap, data),0) || soap_put_zkmcu__createConference(soap, data, "zkmcu:createConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__createConference * SOAP_FMAC4 soap_get_zkmcu__createConference(struct soap*, struct zkmcu__createConference *, const char*, const char*);

#ifndef soap_read_zkmcu__createConference
#define soap_read_zkmcu__createConference(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__createConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__createConference * SOAP_FMAC2 soap_instantiate_zkmcu__createConference(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__createConference * soap_new_zkmcu__createConference(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__createConference(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__createConference * soap_new_req_zkmcu__createConference(struct soap *soap) { struct zkmcu__createConference *_p = soap_instantiate_zkmcu__createConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__createConference(soap, _p); } return _p; }

inline struct zkmcu__createConference * soap_new_set_zkmcu__createConference(struct soap *soap, struct zkmcu__CreateConference *req) { struct zkmcu__createConference *_p = soap_instantiate_zkmcu__createConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__createConference(soap, _p); _p->req = req; } return _p; }

inline void soap_delete_zkmcu__createConference(struct soap *soap, struct zkmcu__createConference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__createConference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__CreateConferenceResponse
#define SOAP_TYPE_zkmcu__CreateConferenceResponse (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__CreateConferenceResponse(struct soap*, struct zkmcu__CreateConferenceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__CreateConferenceResponse(struct soap*, const struct zkmcu__CreateConferenceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__CreateConferenceResponse(struct soap*, const char*, int, const struct zkmcu__CreateConferenceResponse *, const char*);
SOAP_FMAC3 struct zkmcu__CreateConferenceResponse * SOAP_FMAC4 soap_in_zkmcu__CreateConferenceResponse(struct soap*, const char*, struct zkmcu__CreateConferenceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__CreateConferenceResponse(struct soap*, const struct zkmcu__CreateConferenceResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__CreateConferenceResponse
#define soap_write_zkmcu__CreateConferenceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__CreateConferenceResponse(soap, data),0) || soap_put_zkmcu__CreateConferenceResponse(soap, data, "zkmcu:CreateConferenceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__CreateConferenceResponse * SOAP_FMAC4 soap_get_zkmcu__CreateConferenceResponse(struct soap*, struct zkmcu__CreateConferenceResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__CreateConferenceResponse
#define soap_read_zkmcu__CreateConferenceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__CreateConferenceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__CreateConferenceResponse * SOAP_FMAC2 soap_instantiate_zkmcu__CreateConferenceResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__CreateConferenceResponse * soap_new_zkmcu__CreateConferenceResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__CreateConferenceResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__CreateConferenceResponse * soap_new_req_zkmcu__CreateConferenceResponse(struct soap *soap, int cid) { struct zkmcu__CreateConferenceResponse *_p = soap_instantiate_zkmcu__CreateConferenceResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__CreateConferenceResponse(soap, _p); _p->cid = cid; } return _p; }

inline struct zkmcu__CreateConferenceResponse * soap_new_set_zkmcu__CreateConferenceResponse(struct soap *soap, int cid, char *reason) { struct zkmcu__CreateConferenceResponse *_p = soap_instantiate_zkmcu__CreateConferenceResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__CreateConferenceResponse(soap, _p); _p->cid = cid; _p->reason = reason; } return _p; }

inline void soap_delete_zkmcu__CreateConferenceResponse(struct soap *soap, struct zkmcu__CreateConferenceResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__CreateConferenceResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__CreateConference
#define SOAP_TYPE_zkmcu__CreateConference (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__CreateConference(struct soap*, struct zkmcu__CreateConference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__CreateConference(struct soap*, const struct zkmcu__CreateConference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__CreateConference(struct soap*, const char*, int, const struct zkmcu__CreateConference *, const char*);
SOAP_FMAC3 struct zkmcu__CreateConference * SOAP_FMAC4 soap_in_zkmcu__CreateConference(struct soap*, const char*, struct zkmcu__CreateConference *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__CreateConference(struct soap*, const struct zkmcu__CreateConference *, const char*, const char*);

#ifndef soap_write_zkmcu__CreateConference
#define soap_write_zkmcu__CreateConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__CreateConference(soap, data),0) || soap_put_zkmcu__CreateConference(soap, data, "zkmcu:CreateConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__CreateConference * SOAP_FMAC4 soap_get_zkmcu__CreateConference(struct soap*, struct zkmcu__CreateConference *, const char*, const char*);

#ifndef soap_read_zkmcu__CreateConference
#define soap_read_zkmcu__CreateConference(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__CreateConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__CreateConference * SOAP_FMAC2 soap_instantiate_zkmcu__CreateConference(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__CreateConference * soap_new_zkmcu__CreateConference(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__CreateConference(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__CreateConference * soap_new_req_zkmcu__CreateConference(struct soap *soap, int mode, int livingcast) { struct zkmcu__CreateConference *_p = soap_instantiate_zkmcu__CreateConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__CreateConference(soap, _p); _p->mode = mode; _p->livingcast = livingcast; } return _p; }

inline struct zkmcu__CreateConference * soap_new_set_zkmcu__CreateConference(struct soap *soap, int mode, int livingcast, char *desc) { struct zkmcu__CreateConference *_p = soap_instantiate_zkmcu__CreateConference(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__CreateConference(soap, _p); _p->mode = mode; _p->livingcast = livingcast; _p->desc = desc; } return _p; }

inline void soap_delete_zkmcu__CreateConference(struct soap *soap, struct zkmcu__CreateConference *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__CreateConference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__getSysInfo
#define SOAP_TYPE_zkmcu__getSysInfo (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__getSysInfo(struct soap*, struct zkmcu__getSysInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__getSysInfo(struct soap*, const struct zkmcu__getSysInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__getSysInfo(struct soap*, const char*, int, const struct zkmcu__getSysInfo *, const char*);
SOAP_FMAC3 struct zkmcu__getSysInfo * SOAP_FMAC4 soap_in_zkmcu__getSysInfo(struct soap*, const char*, struct zkmcu__getSysInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__getSysInfo(struct soap*, const struct zkmcu__getSysInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__getSysInfo
#define soap_write_zkmcu__getSysInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__getSysInfo(soap, data),0) || soap_put_zkmcu__getSysInfo(soap, data, "zkmcu:getSysInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__getSysInfo * SOAP_FMAC4 soap_get_zkmcu__getSysInfo(struct soap*, struct zkmcu__getSysInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__getSysInfo
#define soap_read_zkmcu__getSysInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__getSysInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__getSysInfo * SOAP_FMAC2 soap_instantiate_zkmcu__getSysInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__getSysInfo * soap_new_zkmcu__getSysInfo(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__getSysInfo(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__getSysInfo * soap_new_req_zkmcu__getSysInfo(struct soap *soap) { struct zkmcu__getSysInfo *_p = soap_instantiate_zkmcu__getSysInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getSysInfo(soap, _p); } return _p; }

inline struct zkmcu__getSysInfo * soap_new_set_zkmcu__getSysInfo(struct soap *soap, void *_param_2) { struct zkmcu__getSysInfo *_p = soap_instantiate_zkmcu__getSysInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getSysInfo(soap, _p); _p->_param_2 = _param_2; } return _p; }

inline void soap_delete_zkmcu__getSysInfo(struct soap *soap, struct zkmcu__getSysInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__getSysInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__SysInfoResponse
#define SOAP_TYPE_zkmcu__SysInfoResponse (15)
#endif

#define soap_default_zkmcu__SysInfoResponse(soap, a) soap_default_zkmcu__SysInfo(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__SysInfoResponse(struct soap*, const struct zkmcu__SysInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__SysInfoResponse(struct soap*, const char*, int, const struct zkmcu__SysInfo *, const char*);
SOAP_FMAC3 struct zkmcu__SysInfo * SOAP_FMAC4 soap_in_zkmcu__SysInfoResponse(struct soap*, const char*, struct zkmcu__SysInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__SysInfoResponse(struct soap*, const struct zkmcu__SysInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__SysInfoResponse
#define soap_write_zkmcu__SysInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__SysInfoResponse(soap, data),0) || soap_put_zkmcu__SysInfoResponse(soap, data, "zkmcu:SysInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SysInfo * SOAP_FMAC4 soap_get_zkmcu__SysInfoResponse(struct soap*, struct zkmcu__SysInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__SysInfoResponse
#define soap_read_zkmcu__SysInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__SysInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_zkmcu__SysInfoResponse soap_instantiate_zkmcu__SysInfo


#define soap_copy_zkmcu__SysInfoResponse soap_copy_zkmcu__SysInfo

#ifndef SOAP_TYPE_zkmcu__SysInfo
#define SOAP_TYPE_zkmcu__SysInfo (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__SysInfo(struct soap*, struct zkmcu__SysInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__SysInfo(struct soap*, const struct zkmcu__SysInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__SysInfo(struct soap*, const char*, int, const struct zkmcu__SysInfo *, const char*);
SOAP_FMAC3 struct zkmcu__SysInfo * SOAP_FMAC4 soap_in_zkmcu__SysInfo(struct soap*, const char*, struct zkmcu__SysInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__SysInfo(struct soap*, const struct zkmcu__SysInfo *, const char*, const char*);

#ifndef soap_write_zkmcu__SysInfo
#define soap_write_zkmcu__SysInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__SysInfo(soap, data),0) || soap_put_zkmcu__SysInfo(soap, data, "zkmcu:SysInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SysInfo * SOAP_FMAC4 soap_get_zkmcu__SysInfo(struct soap*, struct zkmcu__SysInfo *, const char*, const char*);

#ifndef soap_read_zkmcu__SysInfo
#define soap_read_zkmcu__SysInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__SysInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__SysInfo * SOAP_FMAC2 soap_instantiate_zkmcu__SysInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__SysInfo * soap_new_zkmcu__SysInfo(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__SysInfo(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__SysInfo * soap_new_req_zkmcu__SysInfo(struct soap *soap, double cpu, double mem, double net_USCOREsent, double net_USCORErecv) { struct zkmcu__SysInfo *_p = soap_instantiate_zkmcu__SysInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SysInfo(soap, _p); _p->cpu = cpu; _p->mem = mem; _p->net_USCOREsent = net_USCOREsent; _p->net_USCORErecv = net_USCORErecv; } return _p; }

inline struct zkmcu__SysInfo * soap_new_set_zkmcu__SysInfo(struct soap *soap, double cpu, double mem, double net_USCOREsent, double net_USCORErecv) { struct zkmcu__SysInfo *_p = soap_instantiate_zkmcu__SysInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__SysInfo(soap, _p); _p->cpu = cpu; _p->mem = mem; _p->net_USCOREsent = net_USCOREsent; _p->net_USCORErecv = net_USCORErecv; } return _p; }

inline void soap_delete_zkmcu__SysInfo(struct soap *soap, struct zkmcu__SysInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__SysInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__getVersion
#define SOAP_TYPE_zkmcu__getVersion (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__getVersion(struct soap*, struct zkmcu__getVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__getVersion(struct soap*, const struct zkmcu__getVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__getVersion(struct soap*, const char*, int, const struct zkmcu__getVersion *, const char*);
SOAP_FMAC3 struct zkmcu__getVersion * SOAP_FMAC4 soap_in_zkmcu__getVersion(struct soap*, const char*, struct zkmcu__getVersion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__getVersion(struct soap*, const struct zkmcu__getVersion *, const char*, const char*);

#ifndef soap_write_zkmcu__getVersion
#define soap_write_zkmcu__getVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__getVersion(soap, data),0) || soap_put_zkmcu__getVersion(soap, data, "zkmcu:getVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__getVersion * SOAP_FMAC4 soap_get_zkmcu__getVersion(struct soap*, struct zkmcu__getVersion *, const char*, const char*);

#ifndef soap_read_zkmcu__getVersion
#define soap_read_zkmcu__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__getVersion * SOAP_FMAC2 soap_instantiate_zkmcu__getVersion(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__getVersion * soap_new_zkmcu__getVersion(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__getVersion(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__getVersion * soap_new_req_zkmcu__getVersion(struct soap *soap) { struct zkmcu__getVersion *_p = soap_instantiate_zkmcu__getVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getVersion(soap, _p); } return _p; }

inline struct zkmcu__getVersion * soap_new_set_zkmcu__getVersion(struct soap *soap, void *_param_1) { struct zkmcu__getVersion *_p = soap_instantiate_zkmcu__getVersion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getVersion(soap, _p); _p->_param_1 = _param_1; } return _p; }

inline void soap_delete_zkmcu__getVersion(struct soap *soap, struct zkmcu__getVersion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_zkmcu__getVersionResponse
#define SOAP_TYPE_zkmcu__getVersionResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_zkmcu__getVersionResponse(struct soap*, struct zkmcu__getVersionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_zkmcu__getVersionResponse(struct soap*, const struct zkmcu__getVersionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_zkmcu__getVersionResponse(struct soap*, const char*, int, const struct zkmcu__getVersionResponse *, const char*);
SOAP_FMAC3 struct zkmcu__getVersionResponse * SOAP_FMAC4 soap_in_zkmcu__getVersionResponse(struct soap*, const char*, struct zkmcu__getVersionResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_zkmcu__getVersionResponse(struct soap*, const struct zkmcu__getVersionResponse *, const char*, const char*);

#ifndef soap_write_zkmcu__getVersionResponse
#define soap_write_zkmcu__getVersionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_zkmcu__getVersionResponse(soap, data),0) || soap_put_zkmcu__getVersionResponse(soap, data, "zkmcu:getVersionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__getVersionResponse * SOAP_FMAC4 soap_get_zkmcu__getVersionResponse(struct soap*, struct zkmcu__getVersionResponse *, const char*, const char*);

#ifndef soap_read_zkmcu__getVersionResponse
#define soap_read_zkmcu__getVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_zkmcu__getVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct zkmcu__getVersionResponse * SOAP_FMAC2 soap_instantiate_zkmcu__getVersionResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct zkmcu__getVersionResponse * soap_new_zkmcu__getVersionResponse(struct soap *soap, int n = -1) { return soap_instantiate_zkmcu__getVersionResponse(soap, n, NULL, NULL, NULL); }

inline struct zkmcu__getVersionResponse * soap_new_req_zkmcu__getVersionResponse(struct soap *soap) { struct zkmcu__getVersionResponse *_p = soap_instantiate_zkmcu__getVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getVersionResponse(soap, _p); } return _p; }

inline struct zkmcu__getVersionResponse * soap_new_set_zkmcu__getVersionResponse(struct soap *soap, char **info) { struct zkmcu__getVersionResponse *_p = soap_instantiate_zkmcu__getVersionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_zkmcu__getVersionResponse(soap, _p); _p->info = info; } return _p; }

inline void soap_delete_zkmcu__getVersionResponse(struct soap *soap, struct zkmcu__getVersionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_zkmcu__getVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTozkmcu__KeyValueArray
#define SOAP_TYPE_PointerTozkmcu__KeyValueArray (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__KeyValueArray(struct soap*, struct zkmcu__KeyValueArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__KeyValueArray(struct soap*, const char *, int, struct zkmcu__KeyValueArray *const*, const char *);
SOAP_FMAC3 struct zkmcu__KeyValueArray ** SOAP_FMAC4 soap_in_PointerTozkmcu__KeyValueArray(struct soap*, const char*, struct zkmcu__KeyValueArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__KeyValueArray(struct soap*, struct zkmcu__KeyValueArray *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__KeyValueArray
#define soap_write_PointerTozkmcu__KeyValueArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__KeyValueArray(soap, data),0) || soap_put_PointerTozkmcu__KeyValueArray(soap, data, "zkmcu:KeyValueArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__KeyValueArray ** SOAP_FMAC4 soap_get_PointerTozkmcu__KeyValueArray(struct soap*, struct zkmcu__KeyValueArray **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__KeyValueArray
#define soap_read_PointerTozkmcu__KeyValueArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__KeyValueArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__KeyValue
#define SOAP_TYPE_PointerTozkmcu__KeyValue (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__KeyValue(struct soap*, struct zkmcu__KeyValue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__KeyValue(struct soap*, const char *, int, struct zkmcu__KeyValue *const*, const char *);
SOAP_FMAC3 struct zkmcu__KeyValue ** SOAP_FMAC4 soap_in_PointerTozkmcu__KeyValue(struct soap*, const char*, struct zkmcu__KeyValue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__KeyValue(struct soap*, struct zkmcu__KeyValue *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__KeyValue
#define soap_write_PointerTozkmcu__KeyValue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__KeyValue(soap, data),0) || soap_put_PointerTozkmcu__KeyValue(soap, data, "zkmcu:KeyValue", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__KeyValue ** SOAP_FMAC4 soap_get_PointerTozkmcu__KeyValue(struct soap*, struct zkmcu__KeyValue **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__KeyValue
#define soap_read_PointerTozkmcu__KeyValue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__KeyValue(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__AddStreamRequest
#define SOAP_TYPE_PointerTozkmcu__AddStreamRequest (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__AddStreamRequest(struct soap*, struct zkmcu__AddStreamRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__AddStreamRequest(struct soap*, const char *, int, struct zkmcu__AddStreamRequest *const*, const char *);
SOAP_FMAC3 struct zkmcu__AddStreamRequest ** SOAP_FMAC4 soap_in_PointerTozkmcu__AddStreamRequest(struct soap*, const char*, struct zkmcu__AddStreamRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__AddStreamRequest(struct soap*, struct zkmcu__AddStreamRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__AddStreamRequest
#define soap_write_PointerTozkmcu__AddStreamRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__AddStreamRequest(soap, data),0) || soap_put_PointerTozkmcu__AddStreamRequest(soap, data, "zkmcu:AddStreamRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddStreamRequest ** SOAP_FMAC4 soap_get_PointerTozkmcu__AddStreamRequest(struct soap*, struct zkmcu__AddStreamRequest **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__AddStreamRequest
#define soap_read_PointerTozkmcu__AddStreamRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__AddStreamRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__AddSinkRequest
#define SOAP_TYPE_PointerTozkmcu__AddSinkRequest (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__AddSinkRequest(struct soap*, struct zkmcu__AddSinkRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__AddSinkRequest(struct soap*, const char *, int, struct zkmcu__AddSinkRequest *const*, const char *);
SOAP_FMAC3 struct zkmcu__AddSinkRequest ** SOAP_FMAC4 soap_in_PointerTozkmcu__AddSinkRequest(struct soap*, const char*, struct zkmcu__AddSinkRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__AddSinkRequest(struct soap*, struct zkmcu__AddSinkRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__AddSinkRequest
#define soap_write_PointerTozkmcu__AddSinkRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__AddSinkRequest(soap, data),0) || soap_put_PointerTozkmcu__AddSinkRequest(soap, data, "zkmcu:AddSinkRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddSinkRequest ** SOAP_FMAC4 soap_get_PointerTozkmcu__AddSinkRequest(struct soap*, struct zkmcu__AddSinkRequest **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__AddSinkRequest
#define soap_read_PointerTozkmcu__AddSinkRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__AddSinkRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__AddSourceRequest
#define SOAP_TYPE_PointerTozkmcu__AddSourceRequest (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__AddSourceRequest(struct soap*, struct zkmcu__AddSourceRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__AddSourceRequest(struct soap*, const char *, int, struct zkmcu__AddSourceRequest *const*, const char *);
SOAP_FMAC3 struct zkmcu__AddSourceRequest ** SOAP_FMAC4 soap_in_PointerTozkmcu__AddSourceRequest(struct soap*, const char*, struct zkmcu__AddSourceRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__AddSourceRequest(struct soap*, struct zkmcu__AddSourceRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__AddSourceRequest
#define soap_write_PointerTozkmcu__AddSourceRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__AddSourceRequest(soap, data),0) || soap_put_PointerTozkmcu__AddSourceRequest(soap, data, "zkmcu:AddSourceRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__AddSourceRequest ** SOAP_FMAC4 soap_get_PointerTozkmcu__AddSourceRequest(struct soap*, struct zkmcu__AddSourceRequest **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__AddSourceRequest
#define soap_read_PointerTozkmcu__AddSourceRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__AddSourceRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__SinkInfoArray
#define SOAP_TYPE_PointerTozkmcu__SinkInfoArray (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__SinkInfoArray(struct soap*, struct zkmcu__SinkInfoArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__SinkInfoArray(struct soap*, const char *, int, struct zkmcu__SinkInfoArray *const*, const char *);
SOAP_FMAC3 struct zkmcu__SinkInfoArray ** SOAP_FMAC4 soap_in_PointerTozkmcu__SinkInfoArray(struct soap*, const char*, struct zkmcu__SinkInfoArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__SinkInfoArray(struct soap*, struct zkmcu__SinkInfoArray *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__SinkInfoArray
#define soap_write_PointerTozkmcu__SinkInfoArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__SinkInfoArray(soap, data),0) || soap_put_PointerTozkmcu__SinkInfoArray(soap, data, "zkmcu:SinkInfoArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SinkInfoArray ** SOAP_FMAC4 soap_get_PointerTozkmcu__SinkInfoArray(struct soap*, struct zkmcu__SinkInfoArray **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__SinkInfoArray
#define soap_read_PointerTozkmcu__SinkInfoArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__SinkInfoArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__SourceInfoArray
#define SOAP_TYPE_PointerTozkmcu__SourceInfoArray (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__SourceInfoArray(struct soap*, struct zkmcu__SourceInfoArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__SourceInfoArray(struct soap*, const char *, int, struct zkmcu__SourceInfoArray *const*, const char *);
SOAP_FMAC3 struct zkmcu__SourceInfoArray ** SOAP_FMAC4 soap_in_PointerTozkmcu__SourceInfoArray(struct soap*, const char*, struct zkmcu__SourceInfoArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__SourceInfoArray(struct soap*, struct zkmcu__SourceInfoArray *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__SourceInfoArray
#define soap_write_PointerTozkmcu__SourceInfoArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__SourceInfoArray(soap, data),0) || soap_put_PointerTozkmcu__SourceInfoArray(soap, data, "zkmcu:SourceInfoArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SourceInfoArray ** SOAP_FMAC4 soap_get_PointerTozkmcu__SourceInfoArray(struct soap*, struct zkmcu__SourceInfoArray **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__SourceInfoArray
#define soap_read_PointerTozkmcu__SourceInfoArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__SourceInfoArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__StreamInfoArray
#define SOAP_TYPE_PointerTozkmcu__StreamInfoArray (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__StreamInfoArray(struct soap*, struct zkmcu__StreamInfoArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__StreamInfoArray(struct soap*, const char *, int, struct zkmcu__StreamInfoArray *const*, const char *);
SOAP_FMAC3 struct zkmcu__StreamInfoArray ** SOAP_FMAC4 soap_in_PointerTozkmcu__StreamInfoArray(struct soap*, const char*, struct zkmcu__StreamInfoArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__StreamInfoArray(struct soap*, struct zkmcu__StreamInfoArray *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__StreamInfoArray
#define soap_write_PointerTozkmcu__StreamInfoArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__StreamInfoArray(soap, data),0) || soap_put_PointerTozkmcu__StreamInfoArray(soap, data, "zkmcu:StreamInfoArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__StreamInfoArray ** SOAP_FMAC4 soap_get_PointerTozkmcu__StreamInfoArray(struct soap*, struct zkmcu__StreamInfoArray **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__StreamInfoArray
#define soap_read_PointerTozkmcu__StreamInfoArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__StreamInfoArray(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__SinkInfo
#define SOAP_TYPE_PointerTozkmcu__SinkInfo (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__SinkInfo(struct soap*, struct zkmcu__SinkInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__SinkInfo(struct soap*, const char *, int, struct zkmcu__SinkInfo *const*, const char *);
SOAP_FMAC3 struct zkmcu__SinkInfo ** SOAP_FMAC4 soap_in_PointerTozkmcu__SinkInfo(struct soap*, const char*, struct zkmcu__SinkInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__SinkInfo(struct soap*, struct zkmcu__SinkInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__SinkInfo
#define soap_write_PointerTozkmcu__SinkInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__SinkInfo(soap, data),0) || soap_put_PointerTozkmcu__SinkInfo(soap, data, "zkmcu:SinkInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SinkInfo ** SOAP_FMAC4 soap_get_PointerTozkmcu__SinkInfo(struct soap*, struct zkmcu__SinkInfo **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__SinkInfo
#define soap_read_PointerTozkmcu__SinkInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__SinkInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__SourceInfo
#define SOAP_TYPE_PointerTozkmcu__SourceInfo (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__SourceInfo(struct soap*, struct zkmcu__SourceInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__SourceInfo(struct soap*, const char *, int, struct zkmcu__SourceInfo *const*, const char *);
SOAP_FMAC3 struct zkmcu__SourceInfo ** SOAP_FMAC4 soap_in_PointerTozkmcu__SourceInfo(struct soap*, const char*, struct zkmcu__SourceInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__SourceInfo(struct soap*, struct zkmcu__SourceInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__SourceInfo
#define soap_write_PointerTozkmcu__SourceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__SourceInfo(soap, data),0) || soap_put_PointerTozkmcu__SourceInfo(soap, data, "zkmcu:SourceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__SourceInfo ** SOAP_FMAC4 soap_get_PointerTozkmcu__SourceInfo(struct soap*, struct zkmcu__SourceInfo **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__SourceInfo
#define soap_read_PointerTozkmcu__SourceInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__SourceInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__StreamInfo
#define SOAP_TYPE_PointerTozkmcu__StreamInfo (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__StreamInfo(struct soap*, struct zkmcu__StreamInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__StreamInfo(struct soap*, const char *, int, struct zkmcu__StreamInfo *const*, const char *);
SOAP_FMAC3 struct zkmcu__StreamInfo ** SOAP_FMAC4 soap_in_PointerTozkmcu__StreamInfo(struct soap*, const char*, struct zkmcu__StreamInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__StreamInfo(struct soap*, struct zkmcu__StreamInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__StreamInfo
#define soap_write_PointerTozkmcu__StreamInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__StreamInfo(soap, data),0) || soap_put_PointerTozkmcu__StreamInfo(soap, data, "zkmcu:StreamInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__StreamInfo ** SOAP_FMAC4 soap_get_PointerTozkmcu__StreamInfo(struct soap*, struct zkmcu__StreamInfo **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__StreamInfo
#define soap_read_PointerTozkmcu__StreamInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__StreamInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTozkmcu__CreateConference
#define SOAP_TYPE_PointerTozkmcu__CreateConference (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTozkmcu__CreateConference(struct soap*, struct zkmcu__CreateConference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTozkmcu__CreateConference(struct soap*, const char *, int, struct zkmcu__CreateConference *const*, const char *);
SOAP_FMAC3 struct zkmcu__CreateConference ** SOAP_FMAC4 soap_in_PointerTozkmcu__CreateConference(struct soap*, const char*, struct zkmcu__CreateConference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTozkmcu__CreateConference(struct soap*, struct zkmcu__CreateConference *const*, const char*, const char*);

#ifndef soap_write_PointerTozkmcu__CreateConference
#define soap_write_PointerTozkmcu__CreateConference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTozkmcu__CreateConference(soap, data),0) || soap_put_PointerTozkmcu__CreateConference(soap, data, "zkmcu:CreateConference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct zkmcu__CreateConference ** SOAP_FMAC4 soap_get_PointerTozkmcu__CreateConference(struct soap*, struct zkmcu__CreateConference **, const char*, const char*);

#ifndef soap_read_PointerTozkmcu__CreateConference
#define soap_read_PointerTozkmcu__CreateConference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTozkmcu__CreateConference(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostring(soap, data),0) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

/* End of soapH.h */
